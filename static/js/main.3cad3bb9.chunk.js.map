{"version":3,"sources":["Components/Topbar/Topbar.style.js","Components/Game/Game.style.js","Components/Topbar/Topbar.js","Utils/getDate.js","DefaultValues/Default.js","Contexts/TodoContext.js","Contexts/ProjectContext.js","Contexts/GroupNamesContext.js","Contexts/NotificationsContext.js","Components/TodoInput/TodoInput.style.js","Components/ShadowMask/ShadowMask.style.js","Components/ShadowMask/ShadowMask.js","Components/AddGroupInput/AddGroupInput.style.js","Components/AddGroupInput/AddGroupInput.js","Components/GroupSelectorMenu/GroupSelectorMenu.style.js","Components/GroupSelectorMenu/GroupSelectorMenu.js","Components/TodoInput/TodoInput.js","Components/TodoGroup/TodoGroup.style.js","Components/TodoMenu/TodoMenu.style.js","Components/TodoMenu/TodoMenu.js","Components/TodoCard/TodoCard.style.js","Components/TodoCard/TodoCard.js","Components/GroupMenu/GroupMenu.style.js","Components/GroupMenu/ConnectedTodos/ConnectedTodos.style.js","Components/GroupMenu/ConnectedTodos/ConnectedTodos.js","Components/GroupMenu/GroupMenu.js","Components/TodoGroup/TodoGroup.js","Components/TodoList/TodoList.style.js","Components/TodoList/TodoList.js","Components/ProjectsList/ProjectList.style.js","Components/ProjectsList/ProjectList.js","Components/App/App.style.js","Components/Notifications/Notifications.style.js","Components/Notifications/Notifications.js","Components/App/App.js","index.js"],"names":["TitleContainer","styled","div","TodoTitle","h1","svg","Topbar","React","useState","showGame","setShowGame","onClick","getDate","date","Date","toString","padStart","getMonth","getFullYear","getHours","getMinutes","exampleProjectId","uuidv4","exampleGroup","name","id","description","projectId","showTodos","exampleProject","current","creationDate","projectContext","list","groupContext","todoContext","group","connectedGroup","details","done","TodosContext","createContext","TodosProvider","props","todoList","setTodoList","Provider","value","style","height","children","ProjectContext","ProjectProvider","projects","setProjects","getProjectById","find","deleteProjectById","prev","filter","GroupNamesContext","GroupNamesProvider","groupNames","setGroupNames","useContext","deleteGroup","a","copyList","currentProject","groupList","length","copyPrev","forEach","groupPercentage","groupId","toFixed","getGroupById","flex","NotificationsContext","NotificationsProvider","notifications","setNotifications","addNotification","level","message","timeoutId","setTimeout","shift","removeNotification","notificationId","clearTimeout","InputContainer","StyledInput","input","StyledButton","button","ChangeGroupButton","OutsideBlock","color","absolute","ShadowMask","className","NameInput","NewGroupButton","AddGroupInput","inputRef","useRef","addGroup","formatted","trim","valueElement","copyProjects","ref","placeholder","onKeyDown","e","key","Relativer","MenuContainer","GroupName","isSelected","ButtonContainer","RemoveButton","MoveButton","GroupSelectorMenu","setOpen","handleGroup","action","swapGroup","direction","listCopy","groupIndex","findIndex","targetIndex","tmp","map","TodoInput","open","inputNameRef","addTodo","project","newTodo","GroupTitle","p","isCurrent","show","MenuHeader","MenuBody","margin","TodoSettings","LinkCheckbox","checked","TodoMenu","todo","setOpenMenu","linkCheck","setLinkCheck","nameRef","descriptionRef","linkGroupRef","defaultValue","disabled","newList","todoCopy","newName","foundTodo","CardContainer","InfoContainer","SelectorContainer","DoneCheckbox","TodoCard","openMenu","ListContainer","TodosContainer","TodoContainer","TodoList","todos","todoIds","selectedList","setSelectedList","performUnlink","todoId","undefined","handleCheck","ConnectedTodos","expandTodos","setExpandTodos","connectedTodos","push","GroupMenu","firstPart","splice","foundGroup","TodoGroup","ProjectContainer","NoTodos","console","log","Center","ProjectsContainer","Project","NewProjectContainer","NewProjectMenu","SettingsMenu","proj","ProjectList","openMenu1","setOpenMenu1","deleteProject","BodyContainer","TodoBody","colorLevels","bg","fg","NotificationsContainer","NotificationContainer","Notifications","notification","InnerApp","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cad3bb9.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const TitleContainer = styled.div`\r\n    /* justify-self: center; */\r\n    /* width: 100%; */\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const TodoTitle = styled.h1`\r\n    color: white;\r\n    /* justify-self: center; */\r\n`;","import styled from 'styled-components';\r\n\r\nexport const GameContainer = styled.svg`\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 100%;\r\n    height: 100%; \r\n    z-index: 5;\r\n\r\n    /* margin: 20px; */\r\n\r\n    background-color: white;\r\n\r\n    svg {\r\n\r\n    }\r\n\r\n    .rectExample {\r\n        fill: black;\r\n    }\r\n`;","import React from 'react';\r\nimport { TitleContainer, TodoTitle } from './Topbar.style';\r\n\r\nimport Game from '../Game/Game';\r\n\r\nconst Topbar = () => {\r\n    const [showGame, setShowGame] = React.useState(false);\r\n\r\n    return (\r\n        <TitleContainer>\r\n            <TodoTitle onClick={() => setShowGame(!showGame)}>TODO</TodoTitle>\r\n            {/* { showGame && <Game /> } */}\r\n        </TitleContainer>\r\n    );\r\n}\r\n\r\nexport default Topbar;","export function getDate() {\r\n    const date = new Date();\r\n    return (date.getDate()).toString().padStart(2, '0') + \"/\"\r\n            + (date.getMonth() + 1).toString().padStart(2, '0') + \"/\"\r\n            + date.getFullYear() + \" \"\r\n            + date.getHours().toString().padStart(2, '0') + \":\"\r\n            + date.getMinutes().toString().padStart(2, '0');\r\n}","import { v4 as uuidv4 } from 'uuid';\r\nimport { getDate } from '../Utils/getDate';\r\n\r\nconst exampleProjectId = uuidv4();\r\n\r\nconst exampleGroup = {\r\n    name: \"Example\",\r\n    id: uuidv4(),\r\n    description: \"An example group.\",\r\n    projectId: exampleProjectId,\r\n    showTodos: true\r\n};\r\n\r\nconst exampleProject = {\r\n    name: \"Project Example\",\r\n    id: exampleProjectId,\r\n    description: \"Project's description.\",\r\n    current: exampleGroup.id,\r\n    creationDate: getDate()\r\n}\r\n\r\nexport const projectContext = {\r\n    current: null,\r\n    list: [exampleProject]\r\n};\r\n\r\nexport const groupContext = [exampleGroup];\r\n\r\nexport const todoContext = [{\r\n    group: exampleGroup.id,\r\n    connectedGroup: null,\r\n    id: uuidv4(),\r\n    details: \"Todo Example\",\r\n    description: \"An example todo\",\r\n    done: false,\r\n    creationDate: getDate(),\r\n    projectId: exampleProject.id\r\n}];","import React, { createContext, useState } from 'react';\r\n\r\nimport { todoContext } from '../DefaultValues/Default';\r\n\r\nexport const TodosContext = createContext();\r\n\r\nexport const TodosProvider = props => {\r\n    const [ todoList, setTodoList ] = useState(todoContext);\r\n\r\n    return (\r\n        <TodosContext.Provider value={{todoList, setTodoList}} style={{height: \"100%\"}}>\r\n            {props.children}\r\n        </TodosContext.Provider>\r\n    );\r\n};","import React from 'react';\r\nimport { projectContext } from '../DefaultValues/Default';\r\n\r\nexport const ProjectContext = React.createContext();\r\n\r\nexport const ProjectProvider = props => {\r\n    const [ projects, setProjects ] = React.useState(projectContext);\r\n\r\n    const getProjectById = (projectId) => {\r\n        return projects.list.find(value => value.id === projectId);\r\n    }\r\n\r\n    const deleteProjectById = (projectId) => {\r\n        setProjects(prev => ({\r\n            current: (prev.current === projectId ? null : prev.current),\r\n            list: prev.list.filter(value => value.id !== projectId)\r\n        }));\r\n    }\r\n\r\n    const value = {\r\n        projects,\r\n        setProjects,\r\n        getProjectById,\r\n        deleteProjectById\r\n    };\r\n\r\n    return (\r\n        <ProjectContext.Provider value={value}>\r\n            {props.children}\r\n        </ProjectContext.Provider>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { TodosContext } from './TodoContext';\r\nimport { ProjectContext } from './ProjectContext';\r\n\r\nimport { groupContext } from '../DefaultValues/Default';\r\n\r\nexport const GroupNamesContext = React.createContext();\r\n\r\nexport const GroupNamesProvider = props => {\r\n    const [ groupNames, setGroupNames ] = React.useState(groupContext);\r\n    const { todoList, setTodoList } = React.useContext(TodosContext);\r\n    const { projects, setProjects } = React.useContext(ProjectContext);\r\n\r\n    const groupPercentage = (groupId) => {\r\n        const list = todoList.filter(value => value.group === groupId);\r\n        \r\n        return ((list.filter(value => value.done && !value.connectedGroup).length / (list.length ? list.length : 1)) * 100).toFixed(1);\r\n    }\r\n\r\n    const getGroupById = (groupId, projectId) => {\r\n        if (!projectId)\r\n            projectId = projects.current;\r\n\r\n        return groupNames.find(value => value.id === groupId && value.projectId === projectId);\r\n    }\r\n\r\n    const deleteGroup = async (group) => {\r\n        setProjects(prev => {\r\n            const copyList = [...prev.list];\r\n            const currentProject = copyList.find(value => value.id === group.projectId);\r\n            \r\n            if (currentProject.current === group.id) {\r\n                const groupList = groupNames.filter(value => value.projectId === currentProject.id && value.id !== group.id);\r\n                currentProject.current = (groupList.length ? groupList[0].id : null);\r\n            }\r\n            return {\r\n                current: prev.current,\r\n                list: copyList\r\n            };\r\n        });\r\n        setGroupNames(prev => prev.filter(value => value.id !== group.id));\r\n        setTodoList(prev => {\r\n            const copyPrev = prev.filter(value => value.group !== group.id);\r\n            copyPrev.forEach(value => {\r\n                if (value.connectedGroup === group.id)\r\n                    value.connectedGroup = null\r\n            });\r\n            return copyPrev;\r\n        });\r\n    }\r\n\r\n    const value = {\r\n        groupNames,\r\n        setGroupNames,\r\n        groupPercentage,\r\n        getGroupById,\r\n        deleteGroup\r\n    }\r\n\r\n    return (\r\n        <GroupNamesContext.Provider value={value} style={{flex: \"1 1 auto\"}}>\r\n            {props.children}\r\n        </GroupNamesContext.Provider>\r\n    );\r\n};","import React from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nexport const NotificationsContext = React.createContext();\r\n\r\nexport const NotificationsProvider = (props) => {\r\n    const [ notifications, setNotifications ] = React.useState([]);\r\n\r\n    const addNotification = (level, message) => {\r\n        const id = uuidv4();\r\n        const timeoutId = setTimeout(() => setNotifications(prev => prev.filter(value => value.id !== id)), 4000);\r\n\r\n        setNotifications(prev => {\r\n            if (prev.length > 7)\r\n                prev.shift();\r\n            return [...prev, {\r\n                id: id,\r\n                timeoutId: timeoutId,\r\n                level: level,\r\n                message: message\r\n            }]\r\n        });\r\n    }\r\n\r\n    const removeNotification = (notificationId) => {\r\n        setNotifications(prev => prev.filter(value => {\r\n            if (value.id === notificationId) {\r\n                clearTimeout(value.timeoutId);\r\n                return false;\r\n            }\r\n            return true;\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <NotificationsContext.Provider value={{notifications, setNotifications, addNotification, removeNotification}}>\r\n            {props.children}\r\n        </NotificationsContext.Provider>\r\n    );\r\n};","import styled from 'styled-components';\r\n\r\nexport const InputContainer = styled.div`\r\n    flex: 0 1 auto;\r\n    display: flex;\r\n    /* overflow: hidden; */\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    justify-content: space-between;\r\n    align-items: stretch;\r\n\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n    width: 100%;\r\n    border: none;\r\n    padding: 15px;\r\n    outline: none;\r\n    border-radius: 10px;\r\n\r\n\r\n    font-size: 20px;\r\n    font-family: inherit;\r\n\r\n    color: #666666;\r\n\r\n    ::placeholder {\r\n        color: #d8d8d8;\r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    /* background-color: #0D1F2D; */\r\n    cursor: pointer;\r\n    outline: none;\r\n    border: 3px #539BDF solid;\r\n    border-right: none;\r\n    border-radius: 10px;\r\n    border-top-right-radius: 0px;\r\n    border-bottom-right-radius: 0px;\r\n    margin: 5px;\r\n    margin-right: 0px;\r\n    \r\n    font-family: inherit;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    \r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    transition: all 0.1s linear;\r\n    \r\n    background-color: #539BDF;\r\n    color: white;\r\n    \r\n    :hover {\r\n        background-color: transparent;\r\n        color: #539BDF;\r\n    }\r\n\r\n    :active {\r\n        background-color: #539BDF;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const ChangeGroupButton = styled.button`\r\n    cursor: pointer;\r\n    outline: none;\r\n    border: 3px #539BDF solid;\r\n    border-left: none;\r\n    border-radius: 10px;\r\n    border-top-left-radius: 0px;\r\n    border-bottom-left-radius: 0px;\r\n    margin: 5px;\r\n    margin-left: 0px;\r\n    \r\n    font-family: inherit;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    \r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    transition: all 0.1s linear;\r\n    \r\n    background-color: #539BDF;\r\n    color: white;\r\n    \r\n    :hover {\r\n        background-color: transparent;\r\n        color: #539BDF;\r\n    }\r\n\r\n    :active {\r\n        background-color: #539BDF;\r\n        color: white;\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const OutsideBlock = styled.div`\r\n    display: flex;\r\n\r\n    .top-everything {\r\n        background-color: ${props => props.color ? props.color : \"transparent\"};\r\n\r\n        z-index: 1000;\r\n        position: absolute;\r\n        top: 0px;\r\n        left: 0px;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .other-top {\r\n        z-index: 1001;\r\n        position: ${props => props.absolute === true ? \"absolute\" : \"relative\"};\r\n        top: 0px;\r\n        left: 0px;\r\n        \r\n        display: flex;\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport {\r\n    OutsideBlock\r\n} from './ShadowMask.style';\r\n\r\nconst ShadowMask = (props) => {\r\n    return (\r\n        <OutsideBlock absolute={props.absolute} color={props.color}>\r\n            <div className=\"top-everything\" onClick={props.onClick} />\r\n            <div className=\"other-top\">\r\n                {props.children}\r\n            </div>\r\n        </OutsideBlock>\r\n    )\r\n}\r\n\r\nexport default ShadowMask;","import styled from 'styled-components';\r\n\r\nexport const InputContainer = styled.div`\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    padding: 5px;\r\n    margin: 5px;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    /* justify-content: space-evenly; */\r\n`;\r\n\r\nexport const NameInput = styled.input`\r\n    background-color: transparent;\r\n    outline: none;\r\n    border: none;\r\n    width: 100%;\r\n\r\n    font-family: inherit;\r\n    font-size: 20px;\r\n`;\r\n\r\nexport const NewGroupButton = styled.button`\r\n    cursor: pointer;\r\n    outline: none;\r\n    border: 3px #539BDF solid;\r\n    background-color: #539BDF;\r\n    color: white;\r\n    border-radius: 10px;\r\n\r\n    font-family: inherit;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    \r\n    transition: all 0.1s linear;\r\n\r\n    :hover {\r\n        background-color: transparent;\r\n        color: #539BDF;\r\n    }\r\n\r\n    :active {\r\n        background-color: #539BDF;\r\n        color: white;\r\n    }\r\n`;","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { GroupNamesContext } from '../../Contexts/GroupNamesContext';\r\nimport { NotificationsContext } from '../../Contexts/NotificationsContext';\r\nimport { ProjectContext } from '../../Contexts/ProjectContext';\r\n\r\nimport {\r\n    InputContainer,\r\n    NameInput,\r\n    NewGroupButton\r\n} from './AddGroupInput.style';\r\n\r\nconst AddGroupInput = () => {\r\n    const { projects, setProjects } = React.useContext(ProjectContext);\r\n    const { groupNames, setGroupNames } = React.useContext(GroupNamesContext);\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n    const inputRef = React.useRef();\r\n\r\n    const addGroup = () => {\r\n        const formatted = inputRef.current.value.trim();\r\n\r\n        if (formatted === \"\")\r\n            return addNotification(\"error\", \"Group name cannot be empty.\");\r\n        else if (groupNames.find(value => value.name === formatted && value.projectId == projects.current))\r\n            return addNotification(\"error\", `Group '${formatted}' already exists.`);\r\n\r\n        const value = {\r\n            name: formatted,\r\n            id: uuidv4(),\r\n            projectId: projects.current,\r\n            showTodos: true\r\n        };\r\n\r\n        if (groupNames.filter(valueElement => valueElement.projectId === projects.current).length === 0) {\r\n            setProjects(prev => {\r\n                const copyProjects = [...projects.list];\r\n                const project = copyProjects.find(valueElement => valueElement.id === projects.current);\r\n\r\n                project.current = value.id;\r\n                return {\r\n                    current: projects.current,\r\n                    list: copyProjects\r\n                };\r\n            })\r\n        }\r\n\r\n        inputRef.current.value = \"\";\r\n        setGroupNames(prev => [...prev, value]);\r\n        addNotification(\"valid\", `Group '${value.name}' has been added.`);\r\n    }\r\n\r\n    const onKeyDown = (e) => {\r\n        if (e.key === \"Enter\")\r\n            addGroup();\r\n    }\r\n\r\n    return (\r\n        <InputContainer>\r\n            <NameInput ref={inputRef} placeholder=\"New group...\" onKeyDown={onKeyDown} />\r\n            <NewGroupButton onClick={addGroup}>New</NewGroupButton>\r\n        </InputContainer>\r\n    );\r\n}\r\n\r\nexport default AddGroupInput;","import styled from 'styled-components';\r\n\r\nexport const Relativer = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nexport const MenuContainer = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n    justify-content: flex-start;\r\n    align-items: stretch;\r\n    overflow: hidden;\r\n\r\n    width: 300px;\r\n    position: absolute;\r\n    top: 40px;\r\n    right: 10px; \r\n    padding: 10px;\r\n\r\n    background-color: #539BDF;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\r\n    color: white;\r\n\r\n    .title {\r\n        flex: 0 1 auto;\r\n    }\r\n\r\n    .content {\r\n        flex: 1 1 auto;\r\n        overflow-y: scroll;\r\n\r\n        max-height: 400px;\r\n    }\r\n\r\n    .content::-webkit-scrollbar {\r\n        width: 5px;\r\n    }\r\n    .content::-webkit-scrollbar-thumb {\r\n        background-color: white;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .addInput {\r\n        flex: 0 1 auto;\r\n    }\r\n`;\r\n\r\nexport const GroupName = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n        \r\n    font-size: 20px;\r\n    /* padding: 10px; */\r\n    margin: 2px;\r\n    border-radius: 10px;\r\n\r\n    transition: all 0.1s linear;\r\n\r\n    background-color: ${props => props.isSelected ? \"#35BECE\" : \"transparent\"};\r\n\r\n    :hover {\r\n        background-color: ${props => props.isSelected ? \"#35BECE\" : \"rgba(0, 0, 0, 0.2)\"};\r\n        transform: scale(0.98);\r\n    }\r\n\r\n    :hover .moveButton {\r\n        background-color: white;\r\n        color: black;\r\n    }\r\n\r\n    p {\r\n        flex: 1 1 auto;\r\n        word-break: break-all;\r\n        margin: 0px;\r\n        padding: 10px;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n    flex: 0 1 auto;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const RemoveButton = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n\r\n    outline: none;\r\n    border: 3px #FF5A5F solid;\r\n    border-radius: 5px;\r\n\r\n    padding: 10px;\r\n    width: 1vw;\r\n    height: 1vw;\r\n\r\n    margin-left: 5px;\r\n    background-color: #FF5A5F;\r\n    color: white;\r\n    font-size: 20px;\r\n    \r\n    transition: all 0.1s linear;\r\n    \r\n    :hover {\r\n        background-color: white;\r\n        color: #FF5A5F;\r\n    }\r\n\r\n    :active {\r\n        background-color: #FF5A5F;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const MoveButton = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n\r\n    outline: none;\r\n    border: none;\r\n    /* border: 3px #FF5A5F solid; */\r\n    border-radius: 5px;\r\n\r\n    padding: 10px;\r\n    width: 1vw;\r\n    height: 1vw;\r\n\r\n    margin-left: 5px;\r\n    /* background-color: #FF5A5F; */\r\n    background-color: transparent;\r\n    color: transparent;\r\n    font-size: 20px;\r\n    \r\n    transition: all 0.1s linear;\r\n    \r\n    :hover {\r\n        background-color: transparent !important;\r\n        color: white !important;\r\n    }\r\n\r\n    :active {\r\n        background-color: white !important;\r\n        color: black !important;\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport {GroupNamesContext} from '../../Contexts/GroupNamesContext';\r\nimport { NotificationsContext } from '../../Contexts/NotificationsContext';\r\nimport { ProjectContext } from '../../Contexts/ProjectContext';\r\n\r\nimport AddGroupInput from '../AddGroupInput/AddGroupInput';\r\n\r\nimport {\r\n    Relativer,\r\n    MenuContainer,\r\n    RemoveButton,\r\n    GroupName,\r\n    ButtonContainer,\r\n    MoveButton\r\n} from './GroupSelectorMenu.style';\r\n\r\nconst GroupSelectorMenu = ({setOpen}) => {\r\n    const { groupNames, setGroupNames, deleteGroup } = React.useContext(GroupNamesContext);\r\n    const { projects, setProjects, getProjectById } = React.useContext(ProjectContext);\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n\r\n    const handleGroup = async (group, action) => {\r\n        if (action === \"remove\") {\r\n            addNotification(\"valid\", `'${group.name}' group has been deleted.`);\r\n            deleteGroup(group);\r\n            return;\r\n        }\r\n\r\n        setProjects(prev => {\r\n            const copyProjects = [...prev.list];\r\n            const project = copyProjects.find(valueElement => valueElement.id === projects.current);\r\n            project.current = group.id;\r\n            return {\r\n                current: prev.current,\r\n                list: copyProjects\r\n            };\r\n\r\n        });\r\n        addNotification(\"valid\", `'${group.name}' is now the default group`);\r\n        \r\n        setOpen(false);\r\n    }\r\n\r\n    const swapGroup = (id, direction) => {\r\n        setGroupNames(prev => {\r\n            const listCopy = [...prev];\r\n            const groupIndex = listCopy.findIndex(valueElement => valueElement.id === id);\r\n            let targetIndex = 0;\r\n            \r\n            if (direction === \"up\") {\r\n                if ((targetIndex = groupIndex) === 0)\r\n                    return listCopy;\r\n                while (--targetIndex >= 0)\r\n                    if (listCopy[targetIndex].projectId === projects.current)\r\n                        break;\r\n            }\r\n            else if (direction === \"down\") {\r\n                if ((targetIndex = groupIndex) === groupNames.filter(valueElement => valueElement.projectId === projects.current).length - 1)\r\n                    return listCopy;\r\n                while (++targetIndex < groupNames.length)\r\n                    if (listCopy[targetIndex].projectId === projects.current)\r\n                        break;\r\n            }\r\n            const tmp = listCopy[groupIndex];\r\n            listCopy[groupIndex] = listCopy[targetIndex];\r\n            listCopy[targetIndex] = tmp;\r\n\r\n            addNotification(\"valid\", `Group '${tmp.name}' has moved ${direction}.`);\r\n            return listCopy;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Relativer>\r\n            <MenuContainer>\r\n                <p className=\"title\">Select default group</p>\r\n                <div className=\"content\">\r\n                    {groupNames.filter(valueElement => valueElement.projectId === projects.current).map((group) => (\r\n                        <GroupName key={group.id} isSelected={getProjectById(projects.current).current === group.id}>\r\n                            <p onClick={() => handleGroup(group, \"change\")}>\r\n                                {group.name}\r\n                            </p>\r\n                            <ButtonContainer>\r\n                                <MoveButton className=\"moveButton\" onClick={() => swapGroup(group.id, \"up\")}>🠉</MoveButton>\r\n                                <MoveButton className=\"moveButton\" onClick={() => swapGroup(group.id, \"down\")}>🠋</MoveButton>\r\n                                <RemoveButton onClick={() => handleGroup(group, \"remove\")}>X</RemoveButton>\r\n                            </ButtonContainer>\r\n                        </GroupName>\r\n                    ))}\r\n                </div>\r\n                <AddGroupInput className=\"addInput\" />\r\n            </MenuContainer>\r\n        </Relativer>\r\n    );\r\n};\r\n\r\n\r\nexport default GroupSelectorMenu;","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { getDate } from '../../Utils/getDate';\r\n\r\nimport { TodosContext } from '../../Contexts/TodoContext';\r\nimport { GroupNamesContext } from '../../Contexts/GroupNamesContext';\r\nimport { NotificationsContext } from '../../Contexts/NotificationsContext';\r\n\r\nimport { \r\n    InputContainer,\r\n    StyledInput,\r\n    StyledButton,\r\n    ChangeGroupButton\r\n} from './TodoInput.style';\r\nimport ShadowMask from '../ShadowMask/ShadowMask';\r\n\r\nimport GroupSelectorMenu from '../GroupSelectorMenu/GroupSelectorMenu';\r\nimport { CSSTransition } from 'react-css-transition';\r\nimport { ProjectContext } from '../../Contexts/ProjectContext';\r\n\r\nconst TodoInput = () => {\r\n    const { setTodoList } = React.useContext(TodosContext);\r\n    const { projects, getProjectById } = React.useContext(ProjectContext);\r\n    const { groupNames, getGroupById } = React.useContext(GroupNamesContext);\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n\r\n    const [ open, setOpen ] = React.useState(false);\r\n\r\n    const inputNameRef = React.useRef();\r\n\r\n    const onKeyDown = (e) => {\r\n        if (e.key === 'Enter')\r\n            addTodo();\r\n    }\r\n\r\n    const addTodo = () => {\r\n        const formatted = inputNameRef.current.value.trim();\r\n        const project = getProjectById(projects.current);\r\n        inputNameRef.current.value = \"\";\r\n\r\n        if (formatted === \"\") {\r\n            addNotification(\"error\", \"Todo name cannot be empty.\");\r\n            return;\r\n        }\r\n        else if (project.current === null) {\r\n            addNotification(\"error\", \"You must select a default group before adding todos.\");\r\n            return;\r\n        }\r\n        \r\n        const newTodo = {\r\n            group: project.current,\r\n            connectedGroup: null,\r\n            id: uuidv4(),\r\n            details: formatted,\r\n            done: false,\r\n            creationDate: getDate()\r\n        };\r\n        \r\n        setTodoList(prev => [newTodo, ...prev]);\r\n        addNotification(\"valid\", `Todo '${formatted}' has been added to group '${getGroupById(project.current).name}'.`);\r\n    }\r\n\r\n    return (\r\n        <InputContainer>\r\n            <StyledInput className=\"todo-input\" placeholder=\"New Todo...\" ref={inputNameRef} onKeyDown={onKeyDown} />\r\n            <StyledButton onClick={addTodo}>\r\n                New\r\n            </StyledButton>\r\n            <ChangeGroupButton onClick={() => setOpen(!open)}>\r\n                ▼\r\n            </ChangeGroupButton>\r\n            {open && <ShadowMask onClick={() => setOpen(false)}>\r\n                <GroupSelectorMenu setOpen={setOpen} />\r\n            </ShadowMask>}\r\n        </InputContainer> \r\n    );\r\n};\r\n\r\nexport default TodoInput;\r\n\r\n// FEEFE5\r\n","import styled from 'styled-components';\r\n\r\nexport const GroupTitle = styled.p`\r\n    font-size: 20px;\r\n    margin: 0px;\r\n    font-weight: bold;\r\n    word-break: break-all;\r\n\r\n    text-decoration: ${props => props.isCurrent ? \"underline\" : \"none\"};\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-left: 20px;\r\n    margin-right: 20px;\r\n    margin-bottom: 10px;\r\n\r\n    transition: all 0.1s linear;\r\n\r\n    :hover {\r\n        transform: scale(0.99);\r\n    }\r\n\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n\r\n    .nameContainer {\r\n        flex: 0 1 auto;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n    }\r\n\r\n    .percentage {\r\n        font-size: 15px;\r\n    }\r\n\r\n    .showTodosToggle {\r\n        flex: 1 1 auto;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: flex-start;\r\n        padding-top: 1em;\r\n        padding-bottom: 1em;\r\n    }\r\n\r\n    .arrowhead {\r\n        font-size: 10px;\r\n        margin: 0px;\r\n        margin-left: 10px;\r\n        padding: 0px;\r\n        transform: ${props => props.show ? \"rotateZ(0deg)\" : \"rotateZ(180deg)\"};\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const MenuContainer = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n\r\n    position: fixed;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    right: 0px;\r\n    width: 350px;\r\n    border-radius: 10px;\r\n\r\n    margin: 30px;\r\n    margin-left: 50px;\r\n\r\n    box-shadow: 0px 0px 40px rgba(0, 0, 0, 0.2);\r\n    background-color: white;\r\n`;\r\n\r\nexport const MenuHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex: 0 1 auto;\r\n\r\n    padding: 10px;\r\n\r\n    .names {\r\n        display: flex;\r\n        margin: 10px;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .groupName {\r\n        text-decoration: underline;\r\n    }\r\n\r\n    .details {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n\r\n    .groupName, .details {\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .closeButton {\r\n        outline: none;\r\n        border: none;\r\n        cursor: pointer;\r\n\r\n        color: black;\r\n        background-color: transparent;\r\n\r\n        font-size: 30px;\r\n\r\n        transition: all 0.1s linear;\r\n\r\n        :hover {\r\n            transform: scale(0.9);\r\n        }\r\n\r\n        :active {\r\n            transform: scale(1.1);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MenuBody = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content:  space-between;\r\n    flex: 1 1 auto;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    flex: 0 1 auto;\r\n    outline: none;\r\n    cursor: pointer;\r\n    margin: ${props => props.margin};\r\n    padding: 10px;\r\n\r\n    border: 3px ${props => props.color} solid;\r\n    border-radius: 10px;\r\n\r\n    font-family: inherit;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n\r\n    background-color: ${props => props.color};\r\n    color: white;\r\n\r\n    transition: all 0.1s linear;\r\n\r\n    :hover {\r\n        background-color: transparent;\r\n        color: ${props => props.color};\r\n    }\r\n\r\n    :active {\r\n        background-color: ${props => props.color};\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const TodoSettings = styled.div`\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    margin: 30px;\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 5px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: gray;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .setting {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .setting select {\r\n        outline: none;\r\n        border: none;\r\n        border-radius: 10px;\r\n        padding: 10px;\r\n        width: 100%;\r\n\r\n        font-family: inherit;\r\n        font-size: 20px;\r\n\r\n\r\n        color: white;\r\n        background-color: #539BDF;\r\n    }\r\n\r\n    .linkGroup {\r\n        display: flex;\r\n        flex-direction: row;\r\n        width: 100%;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    .setting-name {\r\n        font-size: 20px;\r\n        margin: 0px;\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    .setting-input {\r\n        outline: none;\r\n        border: none;\r\n        border-radius: 10px;\r\n        padding: 10px;\r\n        resize: none;\r\n        \r\n\r\n        background-color: #539BDF;\r\n        color: white;\r\n\r\n        font-size: 20px;\r\n        font-family: inherit;\r\n    }\r\n`;\r\n\r\nexport const LinkCheckbox = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 5px;\r\n\r\n    border: 3px #539BDF solid;\r\n    border-radius: 10px;\r\n    font-size: 20px;\r\n    color: ${props => props.checked ? \"white\" : \"#539BDF\"};\r\n    background-color: ${props => props.checked ? \"#539BDF\" : \"transparent\"};\r\n\r\n    width: 2.5vw;\r\n    height: 2.5vw;\r\n\r\n    p {\r\n        transition: all 0.1s linear;\r\n    }\r\n\r\n    :hover p {\r\n        transform: scale(1.2);\r\n    }\r\n    \r\n    :active {\r\n        color: ${props => !props.checked ? \"white\" : \"#539BDF\"};\r\n        background-color: ${props => !props.checked ? \"#539BDF\" : \"transparent\"};;\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { GroupNamesContext } from '../../Contexts/GroupNamesContext';\r\nimport { NotificationsContext } from '../../Contexts/NotificationsContext';\r\nimport { ProjectContext } from '../../Contexts/ProjectContext';\r\nimport { TodosContext } from '../../Contexts/TodoContext';\r\n\r\nimport {\r\n    MenuContainer,\r\n    MenuHeader,\r\n    MenuBody,\r\n    TodoSettings,\r\n    LinkCheckbox,\r\n    StyledButton\r\n} from './TodoMenu.style';\r\n\r\nconst TodoMenu = ({todo, setOpenMenu}) => {\r\n    const [ linkCheck, setLinkCheck ] = React.useState(todo.connectedGroup !== null);\r\n\r\n    const { todoList, setTodoList } = React.useContext(TodosContext);\r\n    const { groupNames } = React.useContext(GroupNamesContext);\r\n    const { projects } = React.useContext(ProjectContext);\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n\r\n    const nameRef = React.useRef();\r\n    const descriptionRef = React.useRef();\r\n    const linkGroupRef = React.useRef();\r\n\r\n    const saveChanges = () => {\r\n        const formatted = nameRef.current.value.trim();\r\n        const newName = formatted === \"\" ? todo.details : formatted;\r\n \r\n        setTodoList(prev => {\r\n            const foundTodo = prev.find(value => value.id === todo.id);\r\n            foundTodo.details = newName;\r\n            foundTodo.description = descriptionRef.current.value;\r\n            if (linkCheck && linkGroupRef.current.value)\r\n                foundTodo.connectedGroup = linkGroupRef.current.value;\r\n            else\r\n                foundTodo.connectedGroup = null;\r\n            addNotification(\"valid\", `Changes made to '${newName}' has been saved.`);\r\n            return prev;\r\n        });\r\n    }\r\n\r\n    const deleteTodo = () => {\r\n        setOpenMenu(false);\r\n        addNotification(\"valid\", `Todo '${todo.details}' has been deleted.`);\r\n        setTodoList(prev => prev.filter(value => value.id !== todo.id));\r\n    }\r\n\r\n    const handleCheck = () => {\r\n        const newList = [...todoList];\r\n        const todoCopy = newList.find(value => value.id === todo.id);\r\n        todoCopy.done = !todoCopy.done;\r\n        addNotification(\"valid\", `Todo '${todo.details}' done status has changed to '${todoCopy.done}'.`);\r\n        setTodoList(newList);\r\n    }\r\n\r\n    return (\r\n        <MenuContainer>\r\n            <MenuHeader>\r\n                <div className=\"names\">\r\n                    <p className=\"details\">Todo settings</p>\r\n                </div>\r\n                <button className=\"closeButton\" onClick={() => setOpenMenu(false)}>✖</button>\r\n            </MenuHeader>\r\n            <MenuBody>\r\n                <TodoSettings>\r\n                    <div className=\"setting\">\r\n                        <p className=\"setting-name\">Name</p>\r\n                        <input ref={nameRef} className=\"setting-input\" defaultValue={todo.details} />\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <p className=\"setting-name\">Description</p>\r\n                        <textarea ref={descriptionRef} className=\"setting-input\" defaultValue={todo.description} />\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <p className=\"setting-name\">Link to group</p>\r\n                        <div className=\"linkGroup\">\r\n                            <LinkCheckbox checked={linkCheck} onClick={() => setLinkCheck(!linkCheck)}><p>✓</p></LinkCheckbox>\r\n                            <select ref={linkGroupRef} value={todo.connectedGroup} disabled={!linkCheck}>\r\n                                {groupNames.filter(valueElement => valueElement.projectId === projects.current).map((group, id) => {\r\n                                    if (todo.group === group.id)\r\n                                        return null;\r\n                                    return <option key={id} value={group.id}>{group.name}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <StyledButton color=\"#539BDF\" onClick={handleCheck}>{!todo.done ? \"Check\" : \"Uncheck\"} todo</StyledButton>\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <StyledButton color=\"#FF5A5F\" onClick={deleteTodo}>Delete todo</StyledButton>\r\n                    </div>\r\n                </TodoSettings>\r\n                <StyledButton margin=\"20px\" color=\"#539BDF\" onClick={saveChanges}>Save changes</StyledButton>\r\n            </MenuBody>\r\n        </MenuContainer>\r\n    );\r\n}\r\n\r\nexport default TodoMenu;","import styled from 'styled-components';\r\n\r\nexport const CardContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n    margin: 10px;\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    font-size: 20px;\r\n\r\n    transition: all 0.1s linear;\r\n\r\n    :hover {\r\n        transform: scale(0.99);\r\n    }\r\n\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nexport const InfoContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* overflow: hidden; */\r\n    cursor: pointer;\r\n\r\n    .details {\r\n        margin-bottom: 0px;\r\n        word-break: break-all;\r\n    }\r\n\r\n    .creationDate {\r\n        color: #b1b1b1;\r\n        font-size: 15px;\r\n        margin-top: 0px;\r\n        margin-bottom: 10px;\r\n    }\r\n`;\r\n\r\nexport const SelectorContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    p {\r\n        font-size: 15px;\r\n        /* margin: 10px; */\r\n        padding: 10px;\r\n        color: white;\r\n        background-color: #35BECE;\r\n        border-radius: 10px;\r\n    }\r\n`;\r\n\r\nexport const RemoveButton = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n\r\n    outline: none;\r\n    border: 3px #FF5A5F solid;\r\n    border-radius: 10px;\r\n\r\n    padding: 20px;\r\n    width: 2vw;\r\n    height: 2vw;\r\n\r\n    margin-left: 5px;\r\n    background-color: #FF5A5F;\r\n    color: white;\r\n    font-size: 20px;\r\n    \r\n    transition: all 0.1s linear;\r\n    \r\n    :hover {\r\n        background-color: transparent;\r\n        color: #FF5A5F;\r\n    }\r\n\r\n    :active {\r\n        background-color: #FF5A5F;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const DoneCheckbox = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n\r\n    outline: none;\r\n    border: 3px #35BECE solid;\r\n    border-radius: 10px;\r\n\r\n    padding: 20px;\r\n    width: 2vw;\r\n    height: 2vw;\r\n\r\n    margin-left: 5px;\r\n\r\n    background-color: ${props => props.done ? \"#35BECE\" : \"transparent\"};\r\n    font-size: 20px;\r\n    color: ${props => props.done ? \"white\" : \"#35BECE\"};\r\n\r\n    transition: all 0.1s linear;\r\n\r\n    :hover {\r\n        font-size: 30px;\r\n    }\r\n\r\n    :active {\r\n        background-color: ${props => !props.done ? \"#35BECE\" : \"transparent\"};\r\n        color: ${props => !props.done ? \"white\" : \"#35BECE\"};\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { NotificationsContext } from '../../Contexts/NotificationsContext';\r\nimport { TodosContext } from '../../Contexts/TodoContext';\r\nimport { GroupNamesContext } from '../../Contexts/GroupNamesContext';\r\n\r\nimport TodoMenu from '../TodoMenu/TodoMenu';\r\n\r\nimport {\r\n    CardContainer,\r\n    SelectorContainer,\r\n    RemoveButton,\r\n    DoneCheckbox,\r\n    InfoContainer,\r\n} from './TodoCard.style';\r\nimport ShadowMask from '../ShadowMask/ShadowMask';\r\n\r\nconst TodoCard = ({todo}) => {\r\n    const { todoList, setTodoList } = React.useContext(TodosContext);\r\n    const { groupPercentage, getGroupById } = React.useContext(GroupNamesContext);\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n    const [ openMenu, setOpenMenu ] = React.useState(false);\r\n\r\n    const handleRemove = () => {\r\n        addNotification(\"valid\", `Todo '${todo.details}' has been deleted.`);\r\n        setTodoList(prev => prev.filter(value => value.id !== todo.id));\r\n    }\r\n    \r\n    const handleCheck = () => {\r\n        const newList = [...todoList];\r\n        const todoCopy = newList.find(value => value.id === todo.id);\r\n        todoCopy.done = !todoCopy.done;\r\n        addNotification(\"valid\", `Todo '${todo.details}' done status has changed to '${todoCopy.done}'.`);\r\n        setTodoList(newList);\r\n    }\r\n\r\n    const group = getGroupById(todo.connectedGroup);\r\n\r\n    return (\r\n        <>\r\n            <CardContainer>\r\n                <InfoContainer onClick={() => setOpenMenu(!openMenu)}>\r\n                    <p className=\"details\">{todo.details}</p>\r\n                    <p className=\"creationDate\">{todo.creationDate}</p>\r\n                </InfoContainer>\r\n                <SelectorContainer>\r\n                    {group\r\n                        ? (<p>{group.name} • {groupPercentage(group.id)}%</p>)\r\n                        : (<DoneCheckbox onClick={handleCheck} done={todo.done}>✓</DoneCheckbox>)\r\n                    }\r\n                    <RemoveButton onClick={handleRemove}>✖</RemoveButton>\r\n                </SelectorContainer>\r\n            </CardContainer>\r\n            {openMenu && <ShadowMask onClick={() => setOpenMenu(false)}>\r\n                <TodoMenu todo={todo} setOpenMenu={setOpenMenu} />\r\n            </ShadowMask> }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TodoCard;","import styled from 'styled-components';\r\n\r\nexport const MenuContainer = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n\r\n    position: fixed;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    right: 0px;\r\n    width: 350px;\r\n    border-radius: 10px;\r\n\r\n    margin: 30px;\r\n    margin-left: 50px;\r\n\r\n    box-shadow: 0px 0px 40px rgba(0, 0, 0, 0.2);\r\n    background-color: white;\r\n`;\r\n\r\nexport const MenuHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex: 0 1 auto;\r\n\r\n    padding: 10px;\r\n\r\n    .names {\r\n        display: flex;\r\n        margin: 10px;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .groupName {\r\n        text-decoration: underline;\r\n    }\r\n\r\n    .details {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n\r\n    .groupName, .details {\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .closeButton {\r\n        outline: none;\r\n        border: none;\r\n        cursor: pointer;\r\n\r\n        color: black;\r\n        background-color: transparent;\r\n\r\n        font-size: 30px;\r\n\r\n        transition: all 0.1s linear;\r\n\r\n        :hover {\r\n            transform: scale(0.9);\r\n        }\r\n\r\n        :active {\r\n            transform: scale(1.1);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MenuBody = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content:  space-between;\r\n    flex: 1 1 auto;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    flex: 0 1 auto;\r\n    outline: none;\r\n    cursor: pointer;\r\n    margin: ${props => props.margin};\r\n    padding: 10px;\r\n\r\n    border: 3px ${props => props.color} solid;\r\n    border-radius: 10px;\r\n\r\n    font-family: inherit;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n\r\n    background-color: ${props => props.color};\r\n    color: white;\r\n\r\n    transition: all 0.1s linear;\r\n\r\n    :hover {\r\n        background-color: transparent;\r\n        color: ${props => props.color};\r\n    }\r\n\r\n    :active {\r\n        background-color: ${props => props.color};\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const TodoSettings = styled.div`\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    margin: 30px;\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 5px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: gray;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .setting {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .setting select {\r\n        outline: none;\r\n        border: none;\r\n        border-radius: 10px;\r\n        padding: 10px;\r\n        width: 100%;\r\n\r\n        font-family: inherit;\r\n        font-size: 20px;\r\n\r\n\r\n        color: white;\r\n        background-color: #539BDF;\r\n    }\r\n\r\n    .linkGroup {\r\n        display: flex;\r\n        flex-direction: row;\r\n        width: 100%;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    .setting-name {\r\n        font-size: 20px;\r\n        margin: 0px;\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    .setting-input {\r\n        outline: none;\r\n        border: none;\r\n        border-radius: 10px;\r\n        padding: 10px;\r\n        resize: none;\r\n        \r\n\r\n        background-color: #539BDF;\r\n        color: white;\r\n\r\n        font-size: 20px;\r\n        font-family: inherit;\r\n    }\r\n`;\r\n\r\nexport const LinkCheckbox = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 5px;\r\n\r\n    border: 3px #539BDF solid;\r\n    border-radius: 10px;\r\n    font-size: 20px;\r\n    color: ${props => props.checked ? \"white\" : \"#539BDF\"};\r\n    background-color: ${props => props.checked ? \"#539BDF\" : \"transparent\"};\r\n\r\n    width: 2.5vw;\r\n    height: 2.5vw;\r\n\r\n    p {\r\n        transition: all 0.1s linear;\r\n    }\r\n\r\n    :hover p {\r\n        transform: scale(1.2);\r\n    }\r\n    \r\n    :active {\r\n        color: ${props => !props.checked ? \"white\" : \"#539BDF\"};\r\n        background-color: ${props => !props.checked ? \"#539BDF\" : \"transparent\"};;\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const ListContainer = styled.div`\r\n    .title {\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        \r\n        transition: all 0.1s linear;\r\n    }\r\n\r\n    .title span {\r\n        font-size: 10px;\r\n    }\r\n\r\n    .title:hover {\r\n        transform: scale(0.99);\r\n    }\r\n\r\n    .title:active {\r\n        transform: scale(0.95);\r\n    }\r\n`;\r\n\r\n\r\nexport const MenuBody = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content:  space-between;\r\n    flex: 1 1 auto;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    flex: 0 1 auto;\r\n    outline: none;\r\n    cursor: pointer;\r\n    margin: ${props => props.margin};\r\n    padding: 10px;\r\n\r\n    border: 3px ${props => props.color} solid;\r\n    border-radius: 10px;\r\n\r\n    font-family: inherit;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n\r\n    background-color: ${props => props.color};\r\n    color: white;\r\n\r\n    transition: all 0.1s linear;\r\n\r\n    :hover {\r\n        background-color: transparent;\r\n        color: ${props => props.color};\r\n    }\r\n\r\n    :active {\r\n        background-color: ${props => props.color};\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const TodosContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 10px;\r\n\r\n    .buttonsContainer {\r\n        display: flex;\r\n        flex-direction: column;\r\n        /* justify-content: flex-end; */\r\n    }\r\n\r\n    .selectAll {\r\n        cursor: pointer;\r\n        align-self: flex-end;\r\n        background-color: transparent;\r\n        outline: none;\r\n        border: none;\r\n        color: #539BDF;\r\n        \r\n        font-family: inherit;\r\n        font-weight: bold;\r\n        padding: 5px;\r\n    }\r\n`\r\n\r\nexport const TodoContainer = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    /* margin-left: 10px; */\r\n\r\n    transition: all 0.1s linear;\r\n\r\n    :hover {\r\n        transform: scale(0.99);\r\n    }\r\n\r\n    :active {\r\n        transform: scale(0.95);\r\n    }\r\n\r\n    .nameContainer {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        margin: 10px;\r\n    \r\n        font-size: 15px;\r\n\r\n        p {\r\n            margin: 2px;\r\n        }\r\n    }\r\n\r\n    .checkbox {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        border: 2px #b1b1b1 solid;\r\n        border-radius: 10px;\r\n        padding: 5px;\r\n\r\n        width: 1vw;\r\n        height: 1vw;\r\n\r\n        background-color: ${props => props.checked ? \"#b1b1b1\" : \"transparent\"};\r\n        color: white;\r\n    }\r\n\r\n    .fromGroup {\r\n        color: #b1b1b1;\r\n    }\r\n`;","import React from 'react';\r\nimport { GroupNamesContext } from '../../../Contexts/GroupNamesContext';\r\nimport { TodosContext } from '../../../Contexts/TodoContext';\r\n\r\nimport {\r\n    ListContainer,\r\n    StyledButton,\r\n    TodosContainer,\r\n    TodoContainer\r\n} from './ConnectedTodos.style';\r\n\r\nconst ConnectedTodos = ({group}) => {\r\n    const [ expandTodos, setExpandTodos ] = React.useState(false);\r\n\r\n    const { todoList, setTodoList } = React.useContext(TodosContext);\r\n\r\n    const connectedTodos = [];\r\n    todoList.forEach((value, id) =>\r\n        value.connectedGroup === group.id && connectedTodos.push(id));\r\n\r\n    return (\r\n        <ListContainer>\r\n            <p onClick={() => setExpandTodos(!expandTodos)} className=\"title\">\r\n                Connected todos ({connectedTodos.length}) <span>{expandTodos ? \"⮝\" : \"⮟\"}</span>\r\n            </p>\r\n            { expandTodos && <TodoList todos={todoList} todoIds={connectedTodos} setTodoList={setTodoList} /> }\r\n        </ListContainer>\r\n    )\r\n}\r\n\r\nconst TodoList = ({todos, todoIds, setTodoList}) => {\r\n    const [ selectedList, setSelectedList ] = React.useState([]);\r\n    const { getGroupById } = React.useContext(GroupNamesContext);\r\n\r\n    const handleCheck = (id, checked) => {\r\n        if (checked)\r\n            setSelectedList(prev => prev.filter(value => value !== id));\r\n        else\r\n            setSelectedList(prev => [...prev, id]);\r\n    }\r\n\r\n    const selectAll = () => {\r\n        setSelectedList([...todoIds]);\r\n    }\r\n\r\n    const performUnlink = async () => {\r\n        await setTodoList(prev => {\r\n            const copyPrev = [...prev];\r\n            selectedList.forEach(value => copyPrev[value].connectedGroup = null);    ;\r\n            return copyPrev;\r\n        })\r\n        setSelectedList([]);\r\n    }\r\n\r\n    return (\r\n        <TodosContainer>\r\n            <div className=\"buttonsContainer\">\r\n                <StyledButton onClick={performUnlink} color=\"#539BDF\">Unlink selected todos ({selectedList.length})</StyledButton>\r\n                <button onClick={selectAll} className=\"selectAll\">Select all</button>\r\n            </div>\r\n            { todoIds.map((todoId, id) => {\r\n                const checked = selectedList.find(value => value === todoId) !== undefined ? true : false;\r\n\r\n                return (\r\n                    <TodoContainer key={id} checked={checked} onClick={() => handleCheck(todoId, checked)}>\r\n                        <div className=\"nameContainer\">\r\n                            <p className=\"detail\">{todos[todoId].details}</p>\r\n                            <p className=\"fromGroup\">{getGroupById(todos[todoId].group).name} - {todos[todoId].creationDate}</p>\r\n                        </div>\r\n                        <p className=\"checkbox\">✓</p>\r\n                    </TodoContainer>\r\n                )\r\n            })}\r\n        </TodosContainer>\r\n    )\r\n}\r\n\r\nexport default ConnectedTodos;","import React from 'react';\r\nimport { GroupNamesContext } from '../../Contexts/GroupNamesContext';\r\nimport { NotificationsContext } from '../../Contexts/NotificationsContext';\r\nimport { ProjectContext } from '../../Contexts/ProjectContext';\r\n\r\nimport {\r\n    MenuContainer,\r\n    MenuHeader,\r\n    MenuBody,\r\n    TodoSettings,\r\n    StyledButton\r\n} from './GroupMenu.style';\r\n\r\nimport ConnectedTodos from './ConnectedTodos/ConnectedTodos';\r\n\r\nconst GroupMenu = ({group, setOpenMenu}) => {\r\n    const { setProjects } = React.useContext(ProjectContext);\r\n    const { groupNames, setGroupNames, deleteGroup } = React.useContext(GroupNamesContext);\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n\r\n    const nameRef = React.useRef();\r\n    const descriptionRef = React.useRef();\r\n\r\n    const saveChanges = () => {\r\n        const formatted = nameRef.current.value.trim();\r\n        if (groupNames.find(value => value.name === formatted && value.id !== group.id))\r\n            return addNotification(\"error\", \"Group name already taken.\");\r\n\r\n        const newName = formatted === \"\" ? group.name : formatted;\r\n\r\n        addNotification(\"valid\", `Changes made to group '${newName}' has been saved.`);\r\n        setGroupNames(prev => {\r\n            const copyPrev = [...prev];\r\n            const foundGroup = copyPrev.find(value => value.id === group.id);\r\n            foundGroup.name = newName;\r\n            foundGroup.description = descriptionRef.current.value;\r\n            return copyPrev;\r\n        });\r\n    }\r\n\r\n    const setDefaultGroup = () => {\r\n        setProjects(prev => {\r\n            const copyProjects = [...prev.list];\r\n            const project = copyProjects.find(valueElement => valueElement.id === prev.current);\r\n            project.current = group.id;\r\n            \r\n            return {\r\n                current: prev.current,\r\n                list: copyProjects\r\n            };\r\n        });\r\n\r\n        addNotification(\"valid\", `'${group.name}' is now the default group`);\r\n    }\r\n\r\n    const moveOnTop = () => {\r\n        setGroupNames(prev => {\r\n            const groupIndex = prev.findIndex(value => value.id === group.id);\r\n            const copyList = [...prev];\r\n            const firstPart = copyList.splice(0, groupIndex);\r\n            copyList.shift();\r\n\r\n            return [group, ...firstPart, ...copyList];\r\n        });\r\n        \r\n        addNotification(\"valid\", `Group '${group.name}' is now on top.`);\r\n    }\r\n\r\n    const handleDeleteGroup = () => {\r\n        setOpenMenu(false);\r\n        addNotification(\"valid\", `'${group.name}' group has been deleted.`);\r\n        deleteGroup(group);\r\n    }\r\n\r\n    return (\r\n        <MenuContainer>\r\n            <MenuHeader>\r\n                <div className=\"names\">\r\n                    <p className=\"details\">Group settings</p>\r\n                </div>\r\n                <button className=\"closeButton\" onClick={() => setOpenMenu(false)}>✖</button>\r\n            </MenuHeader>\r\n            <MenuBody>\r\n                <TodoSettings>\r\n                    <div className=\"setting\">\r\n                        <p className=\"setting-name\">Name</p>\r\n                        <input ref={nameRef} className=\"setting-input\" defaultValue={group.name} />\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <p className=\"setting-name\">Description</p>\r\n                        <textarea ref={descriptionRef} className=\"setting-input\" defaultValue={group.description} />\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <ConnectedTodos group={group} />\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <StyledButton color=\"#539BDF\" onClick={setDefaultGroup}>Set default group</StyledButton>\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <StyledButton color=\"#539BDF\" onClick={moveOnTop}>Move on top</StyledButton>\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <StyledButton color=\"#FF5A5F\" onClick={handleDeleteGroup}>Delete group</StyledButton>\r\n                    </div>\r\n                </TodoSettings>\r\n                <StyledButton margin=\"20px\" color=\"#539BDF\" onClick={saveChanges}>Save changes</StyledButton>\r\n            </MenuBody>\r\n        </MenuContainer>\r\n    );\r\n}\r\n\r\nexport default GroupMenu;","import React from 'react';\r\n\r\nimport {\r\n    GroupTitle,\r\n    TitleContainer,\r\n} from './TodoGroup.style';\r\n\r\nimport TodoCard from '../TodoCard/TodoCard';\r\nimport { GroupNamesContext } from '../../Contexts/GroupNamesContext';\r\nimport ShadowMask from '../ShadowMask/ShadowMask';\r\nimport GroupMenu from '../GroupMenu/GroupMenu';\r\n\r\nconst TodoGroup = ({isCurrent, group, list}) => {\r\n    const { setGroupNames, groupPercentage } = React.useContext(GroupNamesContext);\r\n\r\n    const [ openMenu, setOpenMenu ] = React.useState(false);\r\n\r\n    const showTodos = async () => {\r\n        await setGroupNames(prev => prev);\r\n        setGroupNames(prev => {\r\n            const copyPrev = [...prev];\r\n            const foundGroup = copyPrev.find(valueElement => valueElement.id === group.id);\r\n            foundGroup.showTodos = !foundGroup.showTodos;\r\n            return copyPrev;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TitleContainer show={group.showTodos}>\r\n                <div className=\"nameContainer\" onClick={() => setOpenMenu(!openMenu)}>\r\n                    <GroupTitle isCurrent={isCurrent}>{group.name}</GroupTitle>\r\n                </div>\r\n                <div className=\"showTodosToggle\" onClick={showTodos}>\r\n                    <p className=\"arrowhead\">⮟</p>\r\n                </div>\r\n                <p className=\"percentage\">{groupPercentage(group.id)}%</p>\r\n            </TitleContainer>\r\n            {group.showTodos && list.map((todo, id) => (\r\n                <TodoCard key={id} todo={todo}/>\r\n            ))}\r\n            { openMenu && <ShadowMask onClick={() => setOpenMenu(!openMenu)}>\r\n                <GroupMenu setOpenMenu={setOpenMenu} group={group} />\r\n            </ShadowMask> }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TodoGroup;","import styled from 'styled-components';\r\n\r\nexport const ProjectContainer = styled.div`\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n\r\n    background-color: white;\r\n    border-radius: 10px;\r\n\r\n    margin-bottom: 20px;\r\n\r\n    .project-div {\r\n        cursor: pointer;\r\n        align-self: center;\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        padding: 0px;\r\n        padding-bottom: 20px;\r\n        padding-left: 40px;\r\n        padding-right: 40px;\r\n        margin: 0px;\r\n\r\n        background-color: #539BDF;\r\n        color: white;\r\n\r\n\r\n        border-radius: 20px;\r\n        border-top-left-radius: 0px;\r\n        border-top-right-radius: 0px;\r\n\r\n        box-shadow: 0px 5px 10px #539BDF55;\r\n\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n\r\n        transition: all 0.1s linear;\r\n\r\n        :hover {\r\n            transform: translateY(-3px);\r\n        }\r\n\r\n        :active {\r\n            transform: translateY(-10px);\r\n        }\r\n    }\r\n\r\n    .back-arrow, .project-title {\r\n        padding: 0px;\r\n        margin: 0px;\r\n    }\r\n\r\n    .back-arrow {\r\n        margin-right: 10px;\r\n    }\r\n`;\r\n\r\nexport const TodosContainer = styled.div`\r\n    flex: 1 1 auto;\r\n    overflow: hidden;\r\n    overflow-y: scroll;\r\n    position: relative;\r\n    top: 0px;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 5px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: gray;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .project-title {\r\n        text-align: center;\r\n        background-color: black;\r\n    }\r\n`;\r\n\r\nexport const NoTodos = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    p {\r\n        color: rgba(0, 0, 0, 0.5);\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { TodosContext } from '../../Contexts/TodoContext';\r\nimport { GroupNamesContext } from '../../Contexts/GroupNamesContext';\r\n\r\nimport TodoGroup from '../TodoGroup/TodoGroup';\r\n\r\nimport {\r\n    ProjectContainer,\r\n    TodosContainer,\r\n    NoTodos\r\n} from './TodoList.style';\r\nimport { ProjectContext } from '../../Contexts/ProjectContext';\r\n\r\nconst TodoList = () => {\r\n    const { todoList } = React.useContext(TodosContext);\r\n    const { groupNames } = React.useContext(GroupNamesContext);\r\n    const { projects, setProjects, getProjectById } = React.useContext(ProjectContext);\r\n\r\n    const groupList = groupNames.filter(valueElement => valueElement.projectId === projects.current);\r\n\r\n    const closeProject = () => {\r\n        setProjects(prev => ({\r\n            current: null,\r\n            list: prev.list\r\n        }));\r\n    }\r\n    console.log(`hehfzefedve: ${projects.current}`);\r\n\r\n    return (\r\n        <ProjectContainer>\r\n            <div className=\"project-div\" onClick={closeProject}>\r\n                <p className=\"back-arrow\">▲</p>\r\n                <p className=\"project-title\">{getProjectById(projects.current).name}</p>\r\n            </div>\r\n            <TodosContainer>\r\n                {groupList.length ? groupList.map((group) => (\r\n                    <TodoGroup key={group.id} isCurrent={getProjectById(projects.current).current === group.id} group={group} list={todoList.filter(value => value.group === group.id)} />\r\n                )) : <NoTodos><p>There are no todos yet.</p></NoTodos>}\r\n            </TodosContainer>   \r\n        </ProjectContainer>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import styled from 'styled-components';\r\n\r\nexport const Center = styled.div`\r\n    flex: 1 1 auto;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    width: 50%;\r\n    margin: auto;\r\n\r\n    .add-project {\r\n        cursor: pointer;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        background-color: #35BECE;\r\n        border: 5px #35BECE solid;\r\n\r\n        margin-bottom: 20px;\r\n        border-radius: 10px;\r\n\r\n        color: white;   \r\n        font-size: 30px;\r\n        font-weight: bold;\r\n        padding: 10px;\r\n\r\n        transition: all 0.1s linear;\r\n\r\n        :hover {\r\n            transform: scale(0.98);\r\n        }\r\n\r\n        :active {\r\n            transform: scale(0.95);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ProjectsContainer = styled.div`\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n    position: relative;\r\n    top: 0px;\r\n    overflow: hidden;\r\n    overflow-y: scroll;\r\n\r\n    margin: 0px;\r\n    padding: 0px;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: gray;\r\n        border-radius: 20px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: transparent;\r\n    }\r\n`;\r\n\r\nexport const Project = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n    background-color: white;\r\n    border-radius: 20px;\r\n    margin-bottom: 20px;\r\n\r\n    font-size: 20px;\r\n\r\n    transition: all 0.2s linear;\r\n\r\n    .select-rect {\r\n        border-top-left-radius: 20px;\r\n        border-bottom-left-radius: 20px;\r\n    }\r\n\r\n    .delete-rect {\r\n        border-top-right-radius: 20px;\r\n        border-bottom-right-radius: 20px;\r\n    }\r\n\r\n    .select-rect, .delete-rect {\r\n        cursor: pointer;\r\n        flex: 0 1 auto;\r\n        background-color: white;\r\n        height: 100%;\r\n\r\n        transition: all 0.2s linear;\r\n\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    :hover .select-rect {\r\n        background-color: #35BECE;\r\n    }\r\n\r\n    .icon {\r\n        color: white;\r\n        font-size: 30px;\r\n        padding: 20px;\r\n    }\r\n\r\n    :hover .delete-rect {\r\n        background-color: #FF5A5F;\r\n    }\r\n\r\n    .title-container {\r\n        flex: 1 1 auto;\r\n        cursor: pointer;\r\n        padding: 10px;\r\n        padding-left: 0px;\r\n\r\n        margin-left: 20px;\r\n        margin-right: 20px;\r\n\r\n        transition: all 0.1s linear;\r\n    }\r\n\r\n    .creation-date {\r\n        color: #b1b1b1;\r\n    }\r\n\r\n    :hover {\r\n        transform: scale(0.98);\r\n    }\r\n\r\n    :active {\r\n        transform: scale(0.95);\r\n    }\r\n`;\r\n\r\nexport const CenterMenu = styled.div`\r\n`;\r\n\r\nexport const NewProjectContainer = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    pointer-events: none;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n\r\n    .menu-container {\r\n        pointer-events: auto;\r\n        padding: 10px;\r\n        padding-left: 20px;\r\n        padding-right: 20px;\r\n        border-radius: 20px;\r\n\r\n        background-color: white;\r\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\r\n\r\n        width: 70%; \r\n        height: 70%;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .header {\r\n        flex: 0 1 auto;\r\n        cursor: pointer;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        font-size: 20px;\r\n        font-weight: bold; \r\n\r\n        transition: all 0.1s linear;\r\n    }\r\n\r\n    .header:hover {\r\n        transform: translateY(2px);\r\n    }\r\n\r\n    .header:active {\r\n        transform: translateY(4px);\r\n    }\r\n\r\n    .header :first-child {\r\n        margin-right: 20px;\r\n    }\r\n\r\n    .body {\r\n        flex: 1 1 auto;\r\n        margin: 10px;\r\n        font-size: 15px;\r\n        display: flex;\r\n        overflow: hidden;\r\n        overflow-y: scroll;\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n        /* width: 100%; */\r\n    }\r\n\r\n    .body::-webkit-scrollbar {\r\n        width: 5px;\r\n    }\r\n    .body::-webkit-scrollbar-thumb {\r\n        background-color: gray;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .input {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .input p {\r\n        margin: 0px;\r\n    }\r\n\r\n    .input .field {\r\n        resize: none;\r\n        font-family: inherit;\r\n        font-size: 20px;\r\n        padding: 10px;\r\n\r\n        outline: none;\r\n        border-radius: 10px;\r\n        border: 2px #35BECE solid;\r\n    }\r\n\r\n    .buttons {\r\n        display: flex;\r\n        width: 100%;\r\n    }\r\n\r\n    .buttons button {\r\n        flex-grow: 1;\r\n        cursor: pointer;\r\n        padding: 10px;\r\n        margin-bottom: 10px;\r\n\r\n        font-size: 30px;\r\n        font-family: inherit;\r\n        font-weight: bold;\r\n        outline: none;\r\n        border-radius: 10px;\r\n        transition: all 0.1s linear;\r\n    }\r\n\r\n    .delete-button {\r\n        background-color: #FF5A5F;\r\n        color: white;\r\n\r\n        border: 3px #FF5A5F solid;\r\n        margin-right: 10px;\r\n    }\r\n\r\n    .delete-button:hover {\r\n        background-color: transparent;\r\n        color: #FF5A5F;\r\n    }\r\n\r\n    .add-button {\r\n        background-color: #35BECE;\r\n        color: white;\r\n\r\n        border: 3px #35BECE solid;\r\n    }\r\n\r\n    .add-button:hover {\r\n        background-color: transparent;\r\n        color: #35BECE;\r\n    }\r\n\r\n    .add-button:active {\r\n        background-color: #35BECE;\r\n        color: white;\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { RiDeleteBin2Line } from 'react-icons/ri';\r\nimport { FiSettings } from 'react-icons/fi';\r\nimport { FiChevronLeft } from \"react-icons/fi\";\r\n\r\nimport ShadowMask from '../ShadowMask/ShadowMask';\r\n\r\nimport { ProjectContext } from '../../Contexts/ProjectContext';\r\n\r\nimport {\r\n    Center,\r\n    ProjectsContainer,\r\n    Project,\r\n    CenterMenu,\r\n    NewProjectContainer\r\n} from './ProjectList.style';\r\nimport { NotificationsContext } from '../../Contexts/NotificationsContext';\r\nimport { getDate } from '../../Utils/getDate';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst ProjectList = () => {\r\n    const [ openMenu1, setOpenMenu1 ] = React.useState(null);\r\n    const [ openMenu, setOpenMenu ] = React.useState(false);\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n    const { projects, setProjects, deleteProjectById } = React.useContext(ProjectContext);\r\n\r\n    const openProject = (projectId) => {\r\n        setProjects(prev => ({\r\n            current: projectId,\r\n            list: prev.list\r\n        }));\r\n    }\r\n\r\n    const deleteProject = (project) => {\r\n        deleteProjectById(project.id);\r\n        addNotification(\"valid\", `Project '${project.name}' has been deleted successfully.`)\r\n    }\r\n\r\n    return (\r\n        <Center>\r\n            <ProjectsContainer>\r\n                {projects.list.map(project => (\r\n                    <Project key={project.id}>\r\n                        <div className=\"select-rect\" onClick={() => setOpenMenu1(project)}>\r\n                            <FiSettings className=\"icon\" />\r\n                        </div>\r\n                        <div className=\"title-container\" onClick={() => openProject(project.id)}>\r\n                            <p className=\"project-name\">{project.name}</p>\r\n                            <p className=\"creation-date\">{project.creationDate}</p>\r\n                        </div>\r\n                        <div className=\"delete-rect\" onClick={() => deleteProject(project)}>\r\n                            <RiDeleteBin2Line className=\"icon\" />\r\n                        </div>\r\n                    </Project>\r\n                ))}\r\n            </ProjectsContainer>    \r\n            <div className=\"add-project\" onClick={() => setOpenMenu(!openMenu)}>\r\n                New Project\r\n            </div>\r\n            { openMenu && <NewProjectMenu setOpenMenu={setOpenMenu} /> }\r\n            { openMenu1 && <SettingsMenu setOpenMenu={setOpenMenu1} project={openMenu1} /> }\r\n        </Center>\r\n    )\r\n}\r\n\r\nconst NewProjectMenu = ({setOpenMenu}) => {\r\n    const { projects, setProjects } = React.useContext(ProjectContext)\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n\r\n    const nameRef = React.useRef();\r\n    const descriptionRef = React.useRef();\r\n\r\n    const addProject = () => {\r\n        if (nameRef.current.value === \"\")\r\n            return addNotification(\"error\", \"Project name cannot be empty.\");\r\n        else if (projects.list.find(value => value.name === nameRef.current.value))\r\n            return addNotification(\"error\", \"Project name already exists.\");\r\n\r\n        setProjects(prev => ({\r\n            current: prev.current,\r\n            list: [...prev.list, {\r\n                name: nameRef.current.value,\r\n                description: descriptionRef.current.value,\r\n                creationDate: getDate(),\r\n                id: uuidv4(),\r\n                current: null\r\n            }]\r\n        }));\r\n        setOpenMenu(false);\r\n    }\r\n\r\n    return (\r\n        <ShadowMask onClick={() => setOpenMenu(false)} color={\"#D5D5D555\"}>\r\n            <NewProjectContainer>\r\n                <div className=\"menu-container\">\r\n                    <div className=\"header\" onClick={() => setOpenMenu(false)}>\r\n                        <FiChevronLeft />\r\n                        <p>Create a new project</p>\r\n                    </div>\r\n                    <div className=\"body\">\r\n                        <div className=\"input\">\r\n                            <p>Name</p>\r\n                            <input ref={nameRef} className=\"field\" />\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            <p>Description</p>\r\n                            <textarea ref={descriptionRef} className=\"field\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <button onClick={addProject} className=\"add-button\">Create project</button>\r\n                    </div>\r\n                </div>\r\n            </NewProjectContainer>\r\n        </ShadowMask>\r\n    );\r\n}\r\n\r\n\r\nconst SettingsMenu = ({setOpenMenu, project}) => {\r\n    const { projects, setProjects, deleteProjectById } = React.useContext(ProjectContext)\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n\r\n    const nameRef = React.useRef();\r\n    const descriptionRef = React.useRef();\r\n\r\n    const saveChanges = () => {\r\n        if (nameRef.current.value === \"\")\r\n            return addNotification(\"error\", \"Project name cannot be empty.\");\r\n        else if (projects.list.find(value => value.id !== project.id && value.name === nameRef.current.value))\r\n            return addNotification(\"error\", \"Project name already exists.\");\r\n\r\n        setProjects(prev => {\r\n            const newList = [...prev.list];\r\n            const proj = newList.find(value => value.id === project.id);\r\n\r\n            proj.name = nameRef.current.value;\r\n            proj.description = descriptionRef.current.value;\r\n            return {\r\n                current: prev.current,\r\n                list: newList\r\n            };\r\n        });\r\n        addNotification(\"valid\", `Changes made to '${nameRef.current.value}' has been saved.`);\r\n        setOpenMenu(null);\r\n    }\r\n\r\n    const deleteProject = () => {\r\n        deleteProjectById(project.id);\r\n        setOpenMenu(null);\r\n        addNotification(\"valid\", `Project '${project.name}' has been deleted successfully.`)\r\n    }\r\n\r\n    return (\r\n        <ShadowMask onClick={() => setOpenMenu(null)} color={\"#D5D5D555\"}>\r\n            <NewProjectContainer>\r\n                <div className=\"menu-container\">\r\n                    <div className=\"header\" onClick={() => setOpenMenu(null)}>\r\n                        <FiChevronLeft />\r\n                        <p>Project settings</p>\r\n                    </div>\r\n                    <div className=\"body\">\r\n                        <div className=\"input\">\r\n                            <p>Name</p>\r\n                            <input ref={nameRef} className=\"field\" defaultValue={project.name} />\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            <p>Description</p>\r\n                            <textarea ref={descriptionRef} className=\"field\" defaultValue={project.description} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <button onClick={deleteProject} className=\"delete-button\">Delete project</button>\r\n                        <button onClick={saveChanges} className=\"add-button\">Save changes</button>\r\n                    </div>\r\n                </div>\r\n            </NewProjectContainer>\r\n        </ShadowMask>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import styled from 'styled-components';\r\n\r\nexport const BodyContainer = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n    /* margin: auto; */\r\n    /* width: 50%; */\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const TodoBody = styled.div`\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    flex-flow: column;\r\n    overflow: hidden;\r\n\r\n    width: 50%;\r\n    margin: auto;\r\n`;","import styled from 'styled-components';\r\n\r\nconst colorLevels = {\r\n    \"error\": {\r\n        bg: \"#FF5A5F\",\r\n        fg: \"white\"\r\n    },\r\n    \"valid\": {\r\n        bg: \"#35BECE\",\r\n        fg: \"white\"\r\n    },\r\n    \"neutral\": {\r\n        bg: \"white\",\r\n        fg: \"black\"\r\n    }\r\n};\r\n\r\nexport const NotificationsContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n    \r\n    position: fixed;\r\n    left: 50px;\r\n    bottom: 50px;\r\n\r\n    z-index: 1002;\r\n`;\r\n\r\nexport const NotificationContainer = styled.div`\r\n    cursor: pointer;\r\n    border-radius: 10px; \r\n    margin: 5px;\r\n    width: 300px;\r\n\r\n    background-color: ${props => colorLevels[props.level].bg};\r\n    color: ${props => colorLevels[props.level].fg};\r\n\r\n    transition: all 0.1s linear;\r\n\r\n    .message {\r\n        margin: 10px;\r\n    }\r\n\r\n    :hover {\r\n        transform: scale(1.1);\r\n    }\r\n\r\n    :active {\r\n        transform: scale(0.9);\r\n    }\r\n`;","import React from 'react'\r\nimport { NotificationsContext } from '../../Contexts/NotificationsContext';\r\n\r\nimport {\r\n    NotificationsContainer,\r\n    NotificationContainer\r\n} from './Notifications.style';\r\n\r\nconst Notifications = () => {\r\n    const { notifications, removeNotification } = React.useContext(NotificationsContext);\r\n\r\n    return (\r\n        <NotificationsContainer>\r\n            {notifications.map((notification) => {\r\n                return (\r\n                    <NotificationContainer key={notification.id} onClick={() => removeNotification(notification.id)} level={notification.level}>\r\n                        <p className=\"message\">{notification.message}</p>\r\n                    </NotificationContainer>\r\n                );\r\n            })}\r\n        </NotificationsContainer>\r\n    );\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\n\nimport Topbar from '../Topbar/Topbar';\nimport TodoInput from '../TodoInput/TodoInput';\nimport TodoList from '../TodoList/TodoList';\nimport ProjectList from '../ProjectsList/ProjectList';\n\nimport { ProjectContext, ProjectProvider } from '../../Contexts/ProjectContext';\nimport { TodosProvider } from '../../Contexts/TodoContext';\nimport { GroupNamesContext, GroupNamesProvider } from '../../Contexts/GroupNamesContext';\nimport { NotificationsProvider } from '../../Contexts/NotificationsContext';\n\nimport {\n  BodyContainer,\n  TodoBody\n} from './App.style';\nimport Notifications from '../Notifications/Notifications';\n\n\nconst App = () => {\n  return (\n    <NotificationsProvider>\n      <BodyContainer>\n        <Topbar />\n        <ProjectProvider>\n          <TodosProvider>\n            <GroupNamesProvider>\n              <InnerApp />\n            </GroupNamesProvider>\n          </TodosProvider>\n        </ProjectProvider>\n        <Notifications />\n      </BodyContainer>\n    </NotificationsProvider>\n  );\n}\n\nconst InnerApp = () => {\n  const { projects } = React.useContext(ProjectContext);\n\n  if (projects.current)\n    return (\n      <TodoBody>\n        <TodoInput />\n        <TodoList />\n      </TodoBody>\n    );\n\n  return (\n    <ProjectList />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}