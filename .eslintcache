[{"D:\\Desktop\\Projects\\nodejs\\todo\\src\\index.js":"1","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\TodoContext.js":"2","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Utils\\getDate.js":"3","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\GroupNamesContext.js":"4","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\NotificationsContext.js":"5","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Utils\\StyledComponents.js":"6","D:\\Desktop\\Projects\\nodejs\\todo\\src\\DefaultValues\\Default.js":"7","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\App\\App.js":"8","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\App\\App.style.js":"9","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Topbar\\Topbar.js":"10","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoInput\\TodoInput.js":"11","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Notifications\\Notifications.js":"12","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoList\\TodoList.js":"13","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Topbar\\Topbar.style.js":"14","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoInput\\TodoInput.style.js":"15","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Notifications\\Notifications.style.js":"16","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Game\\Game.js":"17","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\ShadowMask\\ShadowMask.js":"18","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoList\\TodoList.style.js":"19","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupSelectorMenu\\GroupSelectorMenu.js":"20","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoGroup\\TodoGroup.js":"21","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Game\\Game.style.js":"22","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\ShadowMask\\ShadowMask.style.js":"23","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupSelectorMenu\\GroupSelectorMenu.style.js":"24","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoGroup\\TodoGroup.style.js":"25","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoCard\\TodoCard.js":"26","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\GroupMenu.js":"27","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoCard\\TodoCard.style.js":"28","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\GroupMenu.style.js":"29","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoMenu\\TodoMenu.js":"30","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\ConnectedTodos\\ConnectedTodos.js":"31","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoMenu\\TodoMenu.style.js":"32","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\ConnectedTodos\\ConnectedTodos.style.js":"33","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\AddGroupInput\\AddGroupInput.js":"34","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\AddGroupInput\\AddGroupInput.style.js":"35"},{"size":212,"mtime":1607727189438,"results":"36","hashOfConfig":"37"},{"size":449,"mtime":1607726893302,"results":"38","hashOfConfig":"37"},{"size":361,"mtime":1607216679372,"results":"39","hashOfConfig":"37"},{"size":1701,"mtime":1607707428526,"results":"40","hashOfConfig":"37"},{"size":1267,"mtime":1607567042952,"results":"41","hashOfConfig":"37"},{"size":173,"mtime":1607380309199,"results":"42","hashOfConfig":"37"},{"size":511,"mtime":1607647122327,"results":"43","hashOfConfig":"37"},{"size":913,"mtime":1607733822292,"results":"44","hashOfConfig":"37"},{"size":317,"mtime":1607384177171,"results":"45","hashOfConfig":"37"},{"size":433,"mtime":1607533360256,"results":"46","hashOfConfig":"37"},{"size":2516,"mtime":1607727374050,"results":"47","hashOfConfig":"37"},{"size":838,"mtime":1607726893302,"results":"48","hashOfConfig":"37"},{"size":851,"mtime":1607726893302,"results":"49","hashOfConfig":"37"},{"size":226,"mtime":1607035360253,"results":"50","hashOfConfig":"37"},{"size":2011,"mtime":1607383920006,"results":"51","hashOfConfig":"37"},{"size":890,"mtime":1607566528885,"results":"52","hashOfConfig":"37"},{"size":938,"mtime":1607533980059,"results":"53","hashOfConfig":"37"},{"size":342,"mtime":1607562379661,"results":"54","hashOfConfig":"37"},{"size":545,"mtime":1607734489451,"results":"55","hashOfConfig":"37"},{"size":3085,"mtime":1607726893302,"results":"56","hashOfConfig":"37"},{"size":1441,"mtime":1607726893302,"results":"57","hashOfConfig":"37"},{"size":330,"mtime":1607542885748,"results":"58","hashOfConfig":"37"},{"size":248,"mtime":1607562379661,"results":"59","hashOfConfig":"37"},{"size":3158,"mtime":1607652299975,"results":"60","hashOfConfig":"37"},{"size":1233,"mtime":1607568598841,"results":"61","hashOfConfig":"37"},{"size":2500,"mtime":1607728613899,"results":"62","hashOfConfig":"37"},{"size":4250,"mtime":1607726893302,"results":"63","hashOfConfig":"37"},{"size":2426,"mtime":1607453824720,"results":"64","hashOfConfig":"37"},{"size":4051,"mtime":1607652364336,"results":"65","hashOfConfig":"37"},{"size":4441,"mtime":1607726893302,"results":"66","hashOfConfig":"37"},{"size":2897,"mtime":1607727217826,"results":"67","hashOfConfig":"37"},{"size":4051,"mtime":1607727334593,"results":"68","hashOfConfig":"37"},{"size":2729,"mtime":1607652759276,"results":"69","hashOfConfig":"37"},{"size":1829,"mtime":1607726893302,"results":"70","hashOfConfig":"37"},{"size":973,"mtime":1607382590979,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"5ol0iy",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"D:\\Desktop\\Projects\\nodejs\\todo\\src\\index.js",[],["145","146"],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\TodoContext.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Utils\\getDate.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\GroupNamesContext.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\NotificationsContext.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Utils\\StyledComponents.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\DefaultValues\\Default.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\App\\App.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\App\\App.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Topbar\\Topbar.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoInput\\TodoInput.js",["147"],"import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { getDate } from '../../Utils/getDate';\r\n\r\nimport { TodosContext } from '../../Contexts/TodoContext';\r\nimport { GroupNamesContext } from '../../Contexts/GroupNamesContext';\r\nimport { NotificationsContext } from '../../Contexts/NotificationsContext';\r\n\r\nimport { \r\n    InputContainer,\r\n    StyledInput,\r\n    StyledButton,\r\n    ChangeGroupButton\r\n} from './TodoInput.style';\r\nimport ShadowMask from '../ShadowMask/ShadowMask';\r\n\r\nimport GroupSelectorMenu from '../GroupSelectorMenu/GroupSelectorMenu';\r\nimport { CSSTransition } from 'react-css-transition';\r\n\r\nconst TodoInput = () => {\r\n    const { setTodoList } = React.useContext(TodosContext);\r\n    const { groupNames, getGroupById } = React.useContext(GroupNamesContext);\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n\r\n    const [ open, setOpen ] = React.useState(false);\r\n\r\n    const inputNameRef = React.useRef();\r\n\r\n    const onKeyDown = (e) => {\r\n        if (e.key === 'Enter')\r\n            addTodo();\r\n    }\r\n\r\n    const addTodo = async () => {\r\n        const formatted = inputNameRef.current.value.trim();\r\n\r\n        if (formatted === \"\") {\r\n            addNotification(\"error\", \"Todo name cannot be empty.\");\r\n            return;\r\n        }\r\n        else if (!groupNames.current) {\r\n            addNotification(\"error\", \"You must select a default group before adding todos.\");\r\n            return;\r\n        }\r\n\r\n        addNotification(\"valid\", `Todo '${formatted}' has been added to group '${getGroupById(groupNames.current).name}'.`);\r\n        await setTodoList(prev => [{\r\n            group: groupNames.current,\r\n            connectedGroup: null,\r\n            id: uuidv4(),\r\n            details: formatted,\r\n            done: false,\r\n            creationDate: getDate()\r\n        }, ...prev]);\r\n        inputNameRef.current.value = \"\";\r\n    }\r\n\r\n    return (\r\n        <InputContainer>\r\n            <StyledInput className=\"todo-input\" placeholder=\"New Todo...\" ref={inputNameRef} onKeyDown={onKeyDown} />\r\n            <StyledButton onClick={addTodo}>\r\n                New\r\n            </StyledButton>\r\n            <ChangeGroupButton onClick={() => setOpen(!open)}>\r\n                ▼\r\n            </ChangeGroupButton>\r\n            {open && <ShadowMask onClick={() => setOpen(false)}>\r\n                <GroupSelectorMenu setOpen={setOpen} />\r\n            </ShadowMask>}\r\n        </InputContainer> \r\n    );\r\n};\r\n\r\nexport default TodoInput;\r\n\r\n// FEEFE5\r\n","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Notifications\\Notifications.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoList\\TodoList.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Topbar\\Topbar.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoInput\\TodoInput.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Notifications\\Notifications.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Game\\Game.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\ShadowMask\\ShadowMask.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoList\\TodoList.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupSelectorMenu\\GroupSelectorMenu.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoGroup\\TodoGroup.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Game\\Game.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\ShadowMask\\ShadowMask.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupSelectorMenu\\GroupSelectorMenu.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoGroup\\TodoGroup.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoCard\\TodoCard.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\GroupMenu.js",["148"],"import React from 'react';\r\nimport { GroupNamesContext } from '../../Contexts/GroupNamesContext';\r\nimport { NotificationsContext } from '../../Contexts/NotificationsContext';\r\nimport { TodosContext } from '../../Contexts/TodoContext';\r\n\r\nimport {\r\n    MenuContainer,\r\n    MenuHeader,\r\n    MenuBody,\r\n    TodoSettings,\r\n    StyledButton\r\n} from './GroupMenu.style';\r\n\r\nimport ConnectedTodos from './ConnectedTodos/ConnectedTodos';\r\n\r\nconst GroupMenu = ({group, setOpenMenu}) => {\r\n    const { groupNames, setGroupNames, deleteGroupById } = React.useContext(GroupNamesContext);\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n\r\n    const nameRef = React.useRef();\r\n    const descriptionRef = React.useRef();\r\n\r\n    const saveChanges = () => {\r\n        const formatted = nameRef.current.value.trim();\r\n        if (groupNames.list.find(value => value.name === formatted)) {\r\n            addNotification(\"error\", \"Group name already taken.\");\r\n            return;\r\n        }\r\n\r\n        const newName = formatted === \"\" ? group.name : formatted;\r\n\r\n        addNotification(\"valid\", `Changes made to group '${newName}' has been saved.`);\r\n        setGroupNames(prev => {\r\n            const foundGroup = prev.list.find(value => value.id === group.id);\r\n            foundGroup.name = newName;\r\n            foundGroup.description = descriptionRef.current.value;\r\n            return {\r\n                current: prev.current,\r\n                list: prev.list\r\n            };\r\n        });\r\n    }\r\n\r\n    const setDefaultGroup = () => {\r\n        addNotification(\"valid\", `'${group.name}' is now the default group`);\r\n        setGroupNames(prev => ({\r\n            current: group.id,\r\n            list: prev.list\r\n        }));\r\n    }\r\n\r\n    const moveOnTop = () => {\r\n        addNotification(\"valid\", `Group '${group.name}' is now on top.`);\r\n        setGroupNames(prev => {\r\n            const groupIndex = prev.list.findIndex(value => value.id === group.id);\r\n            const copyList = [...prev.list];\r\n            const firstPart = copyList.splice(0, groupIndex);\r\n            copyList.shift();\r\n            \r\n            return {\r\n                current: prev.current,\r\n                list: [group, ...firstPart, ...copyList]\r\n            }\r\n        })\r\n    }\r\n\r\n    const deleteGroup = () => {\r\n        setOpenMenu(false);\r\n        addNotification(\"valid\", `'${group.name}' group has been deleted.`);\r\n        deleteGroupById(group.id);\r\n    }\r\n\r\n    return (\r\n        <MenuContainer>\r\n            <MenuHeader>\r\n                <div className=\"names\">\r\n                    <p className=\"details\">Group settings</p>\r\n                </div>\r\n                <button className=\"closeButton\" onClick={() => setOpenMenu(false)}>✖</button>\r\n            </MenuHeader>\r\n            <MenuBody>\r\n                <TodoSettings>\r\n                    <div className=\"setting\">\r\n                        <p className=\"setting-name\">Name</p>\r\n                        <input ref={nameRef} className=\"setting-input\" defaultValue={group.name} />\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <p className=\"setting-name\">Description</p>\r\n                        <textarea ref={descriptionRef} className=\"setting-input\" defaultValue={group.description} />\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <ConnectedTodos group={group} />\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <StyledButton color=\"#539BDF\" onClick={setDefaultGroup}>Set default group</StyledButton>\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <StyledButton color=\"#539BDF\" onClick={moveOnTop}>Move on top</StyledButton>\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <StyledButton color=\"#FF5A5F\" onClick={deleteGroup}>Delete group</StyledButton>\r\n                    </div>\r\n                </TodoSettings>\r\n                <StyledButton margin=\"20px\" color=\"#539BDF\" onClick={saveChanges}>Save changes</StyledButton>\r\n            </MenuBody>\r\n        </MenuContainer>\r\n    );\r\n}\r\n\r\nexport default GroupMenu;","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoCard\\TodoCard.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\GroupMenu.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoMenu\\TodoMenu.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\ConnectedTodos\\ConnectedTodos.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoMenu\\TodoMenu.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\ConnectedTodos\\ConnectedTodos.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\AddGroupInput\\AddGroupInput.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\AddGroupInput\\AddGroupInput.style.js",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":18,"column":10,"nodeType":"155","messageId":"156","endLine":18,"endColumn":23},{"ruleId":"153","severity":1,"message":"157","line":4,"column":10,"nodeType":"155","messageId":"156","endLine":4,"endColumn":22},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'CSSTransition' is defined but never used.","Identifier","unusedVar","'TodosContext' is defined but never used.","no-global-assign","no-unsafe-negation"]