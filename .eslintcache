[{"D:\\Desktop\\Projects\\nodejs\\todo\\src\\index.js":"1","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Topbar\\Topbar.js":"2","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Topbar\\Topbar.style.js":"3","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoInput\\TodoInput.js":"4","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoInput\\TodoInput.style.js":"5","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\TodoContext.js":"6","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoList\\TodoList.js":"7","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoList\\TodoList.style.js":"8","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoCard\\TodoCard.js":"9","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoCard\\TodoCard.style.js":"10","D:\\Desktop\\Projects\\nodejs\\todo\\src\\App\\App.js":"11","D:\\Desktop\\Projects\\nodejs\\todo\\src\\App\\App.style.js":"12"},{"size":201,"mtime":1607128420646,"results":"13","hashOfConfig":"14"},{"size":230,"mtime":1607043004659,"results":"15","hashOfConfig":"14"},{"size":226,"mtime":1607035360253,"results":"16","hashOfConfig":"14"},{"size":1030,"mtime":1607136806420,"results":"17","hashOfConfig":"14"},{"size":980,"mtime":1607134133340,"results":"18","hashOfConfig":"14"},{"size":503,"mtime":1607136571775,"results":"19","hashOfConfig":"14"},{"size":511,"mtime":1607136695687,"results":"20","hashOfConfig":"14"},{"size":144,"mtime":1607132573209,"results":"21","hashOfConfig":"14"},{"size":1037,"mtime":1607137597206,"results":"22","hashOfConfig":"14"},{"size":1519,"mtime":1607137572538,"results":"23","hashOfConfig":"14"},{"size":506,"mtime":1607132513246,"results":"24","hashOfConfig":"14"},{"size":186,"mtime":1607132816247,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"5ol0iy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\Desktop\\Projects\\nodejs\\todo\\src\\index.js",[],["53","54"],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Topbar\\Topbar.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Topbar\\Topbar.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoInput\\TodoInput.js",["55"],"import React, {useContext, useRef} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nimport {TodoContext} from '../Contexts/TodoContext';\r\n\r\nimport { \r\n    InputContainer,\r\n    StyledInput,\r\n    StyledButton\r\n} from './TodoInput.style';\r\n\r\nconst TodoInput = () => {\r\n    const [todoList, setTodoList] = useContext(TodoContext);\r\n    const inputNameRef = useRef();\r\n\r\n    const addTodo = async () => {\r\n        if (inputNameRef.current.value === \"\")\r\n            return;\r\n            \r\n        await setTodoList(prev => [{\r\n            id: uuidv4(),\r\n            details: inputNameRef.current.value,\r\n            done: false\r\n        }, ...prev]);\r\n        inputNameRef.current.value = \"\";\r\n    }\r\n\r\n    return (\r\n        <InputContainer>\r\n            <StyledInput className=\"todo-input\" placeholder=\"New Todo...\" ref={inputNameRef} />\r\n            <StyledButton onClick={addTodo}>\r\n                Add\r\n            </StyledButton>\r\n        </InputContainer>\r\n            \r\n    );\r\n};\r\n\r\nexport default TodoInput;\r\n\r\n// FEEFE5\r\n","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoInput\\TodoInput.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\TodoContext.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoList\\TodoList.js",["56"],"import React, {useContext} from 'react';\r\nimport {TodoContext} from '../Contexts/TodoContext';\r\n\r\nimport TodoCard from '../TodoCard/TodoCard';\r\n\r\nimport {\r\n    TodosContainer\r\n} from './TodoList.style';\r\n\r\nconst TodoList = () => {\r\n    const [todoList, setTodoList] = useContext(TodoContext);\r\n\r\n    return (\r\n        <TodosContainer>\r\n            {todoList.map((todo, id) => {\r\n                console.log(todo);\r\n                return <TodoCard key={id} todo={todo} />\r\n            })}\r\n        </TodosContainer>\r\n    );\r\n}\r\n\r\nexport default TodoList;","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoList\\TodoList.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoCard\\TodoCard.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoCard\\TodoCard.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\App\\App.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\App\\App.style.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":13,"column":12,"nodeType":"63","messageId":"64","endLine":13,"endColumn":20},{"ruleId":"61","severity":1,"message":"65","line":11,"column":22,"nodeType":"63","messageId":"64","endLine":11,"endColumn":33},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'todoList' is assigned a value but never used.","Identifier","unusedVar","'setTodoList' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]