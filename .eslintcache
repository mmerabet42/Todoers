[{"D:\\Desktop\\Projects\\nodejs\\todo\\src\\index.js":"1","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Topbar\\Topbar.js":"2","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Topbar\\Topbar.style.js":"3","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoInput\\TodoInput.js":"4","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoInput\\TodoInput.style.js":"5","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\TodoContext.js":"6","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoList\\TodoList.js":"7","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoList\\TodoList.style.js":"8","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoCard\\TodoCard.js":"9","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoCard\\TodoCard.style.js":"10","D:\\Desktop\\Projects\\nodejs\\todo\\src\\App\\App.js":"11","D:\\Desktop\\Projects\\nodejs\\todo\\src\\App\\App.style.js":"12","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Utils\\getDate.js":"13","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoGroup\\TodoGroup.js":"14","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoGroup\\TodoGroup.style.js":"15","D:\\Desktop\\Projects\\nodejs\\todo\\src\\GroupSelectorMenu\\GroupSelectorMenu.js":"16","D:\\Desktop\\Projects\\nodejs\\todo\\src\\GroupSelectorMenu\\GroupSelectorMenu.style.js":"17","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\GroupNamesContext.js":"18","D:\\Desktop\\Projects\\nodejs\\todo\\src\\AddGroupInput\\AddGroupInput.js":"19","D:\\Desktop\\Projects\\nodejs\\todo\\src\\AddGroupInput\\AddGroupInput.style.js":"20","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\NotificationsContext.js":"21","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Notifications\\Notifications.js":"22","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Notifications\\Notifications.style.js":"23"},{"size":201,"mtime":1607128420646,"results":"24","hashOfConfig":"25"},{"size":230,"mtime":1607043004659,"results":"26","hashOfConfig":"25"},{"size":226,"mtime":1607035360253,"results":"27","hashOfConfig":"25"},{"size":2255,"mtime":1607314387328,"results":"28","hashOfConfig":"25"},{"size":1918,"mtime":1607293010033,"results":"29","hashOfConfig":"25"},{"size":602,"mtime":1607294868345,"results":"30","hashOfConfig":"25"},{"size":771,"mtime":1607303768392,"results":"31","hashOfConfig":"25"},{"size":167,"mtime":1607298467319,"results":"32","hashOfConfig":"25"},{"size":1578,"mtime":1607308648099,"results":"33","hashOfConfig":"25"},{"size":2087,"mtime":1607312475270,"results":"34","hashOfConfig":"25"},{"size":881,"mtime":1607306215682,"results":"35","hashOfConfig":"25"},{"size":205,"mtime":1607295947196,"results":"36","hashOfConfig":"25"},{"size":361,"mtime":1607216679372,"results":"37","hashOfConfig":"25"},{"size":756,"mtime":1607303787117,"results":"38","hashOfConfig":"25"},{"size":886,"mtime":1607303818710,"results":"39","hashOfConfig":"25"},{"size":2257,"mtime":1607308988583,"results":"40","hashOfConfig":"25"},{"size":1699,"mtime":1607303011868,"results":"41","hashOfConfig":"25"},{"size":471,"mtime":1607294827344,"results":"42","hashOfConfig":"25"},{"size":1477,"mtime":1607309229097,"results":"43","hashOfConfig":"25"},{"size":951,"mtime":1607301354965,"results":"44","hashOfConfig":"25"},{"size":949,"mtime":1607311661758,"results":"45","hashOfConfig":"25"},{"size":779,"mtime":1607311646431,"results":"46","hashOfConfig":"25"},{"size":835,"mtime":1607310120444,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"5ol0iy",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Desktop\\Projects\\nodejs\\todo\\src\\index.js",[],["100","101"],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Topbar\\Topbar.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Topbar\\Topbar.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoInput\\TodoInput.js",["102","103","104","105","106","107","108"],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoInput\\TodoInput.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\TodoContext.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoList\\TodoList.js",["109","110"],"import React, {useContext} from 'react';\r\nimport { TodosContext } from '../Contexts/TodoContext';\r\nimport { GroupNamesContext } from '../Contexts/GroupNamesContext';\r\n\r\nimport TodoGroup from '../TodoGroup/TodoGroup';\r\n\r\nimport {\r\n    TodosContainer\r\n} from './TodoList.style';\r\n\r\nconst TodoList = () => {\r\n    const [todoList, setTodoList] = useContext(TodosContext);\r\n    const [groupNames, setGroupNames] = useContext(GroupNamesContext);\r\n\r\n    return (\r\n        <TodosContainer>\r\n            {groupNames.list.map((group, id) => (\r\n                <TodoGroup key={id} isCurrent={groupNames.current === group} group={group} list={todoList.filter(value => value.group === group)} />\r\n            ))}\r\n        </TodosContainer>   \r\n    );\r\n}   \r\n\r\nexport default TodoList;","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoList\\TodoList.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoCard\\TodoCard.js",["111","112","113"],"import React, {useContext} from 'react';\r\nimport { NotificationsContext } from '../Contexts/NotificationsContext';\r\n\r\nimport {TodosContext} from '../Contexts/TodoContext';\r\n\r\nimport {\r\n    CardContainer,\r\n    SelectorContainer,\r\n    RemoveButton,\r\n    DoneCheckbox,\r\n    InfoContainer,\r\n    CardDate\r\n} from './TodoCard.style';\r\n\r\nconst TodoCard = ({todo}) => {\r\n    const [todoList, setTodoList] = useContext(TodosContext);\r\n    const [notifications, setNotification, addNotification] = React.useContext(NotificationsContext);\r\n\r\n    const handleRemove = () => {\r\n        addNotification(\"valid\", `Todo '${todo.details}' has been deleted.`);\r\n        setTodoList(prev => prev.filter(value => value.id !== todo.id));\r\n    }\r\n\r\n    const handleCheck = () => {\r\n        const newList = [...todoList];\r\n        const todoCopy = newList.find(value => value.id === todo.id);\r\n        todoCopy.done = !todoCopy.done;\r\n        addNotification(\"valid\", `Todo '${todo.details}' done status has changed to '${todoCopy.done}'.`);\r\n        setTodoList(newList);\r\n    }\r\n\r\n    return (\r\n        <CardContainer>\r\n            <InfoContainer>\r\n                <p className=\"details\">{todo.details}</p>\r\n                <p className=\"creationDate\">{todo.creationDate}</p>\r\n            </InfoContainer>\r\n            <SelectorContainer>\r\n                <DoneCheckbox onClick={handleCheck} done={todo.done}>✓</DoneCheckbox>\r\n                <RemoveButton onClick={handleRemove}>✖</RemoveButton>\r\n            </SelectorContainer>\r\n        </CardContainer>\r\n    );\r\n}\r\n\r\nexport default TodoCard;","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoCard\\TodoCard.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\App\\App.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\App\\App.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Utils\\getDate.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoGroup\\TodoGroup.js",["114","115"],"import React from 'react';\r\n\r\nimport {\r\n    GroupTitle,\r\n    TitleContainer,\r\n    Separator,\r\n    ExpandArrow,\r\n    Percentage\r\n} from './TodoGroup.style';\r\n\r\nimport TodoCard from '../TodoCard/TodoCard';\r\n\r\n\r\nconst TodoGroup = ({isCurrent, group, list}) => {\r\n    const todosDone = (list.filter(value => value.done).length / (list.length ? list.length : 1)) * 100;\r\n\r\n    return (\r\n        <div>\r\n            <TitleContainer>\r\n                <GroupTitle isCurrent={isCurrent}>{group}</GroupTitle>\r\n                <Percentage>{todosDone.toFixed(1)}%</Percentage>\r\n            </TitleContainer>\r\n            {list.map((todo, id) => (\r\n                <TodoCard key={id} todo={todo}/>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoGroup;","D:\\Desktop\\Projects\\nodejs\\todo\\src\\TodoGroup\\TodoGroup.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\GroupSelectorMenu\\GroupSelectorMenu.js",["116","117","118"],"import React, { useContext } from 'react';\r\n\r\nimport {GroupNamesContext} from '../Contexts/GroupNamesContext';\r\nimport AddGroupInput from '../AddGroupInput/AddGroupInput';\r\n\r\nimport {\r\n    Relativer,\r\n    MenuContainer,\r\n    RemoveButton\r\n} from './GroupSelectorMenu.style';\r\nimport { NotificationsContext } from '../Contexts/NotificationsContext';\r\n\r\nconst GroupSelectorMenu = ({setOpen}) => {\r\n    const [groupNames, setGroupNames] = React.useContext(GroupNamesContext);\r\n    const [{}, {}, addNotification] = React.useContext(NotificationsContext);\r\n\r\n    let orderCall = false;\r\n    const handleGroup = (newName, from) => {\r\n        if (orderCall === true) {\r\n            orderCall = false;\r\n            return;\r\n        }\r\n        if (from === \"remove\") {\r\n            orderCall = true;\r\n\r\n            addNotification(\"valid\", `'${newName}' group has been deleted.`);\r\n            setGroupNames(prev => {\r\n                const newList = prev.list.filter(value => value !== newName);\r\n                \r\n                return {\r\n                    current: (prev.current === newName ? newList[0] : prev.current),\r\n                    list: newList\r\n                };\r\n            });\r\n            return;\r\n        }\r\n\r\n        addNotification(\"valid\", `'${newName}' is now the default group`);\r\n        setGroupNames({\r\n            current: newName,\r\n            list: groupNames.list\r\n        });\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <Relativer>\r\n            <MenuContainer>\r\n                <p>Select default group</p>\r\n                {groupNames.list.map((group, id) => (\r\n                    <div key={id} className=\"groupNameContainer\">\r\n                        <p\r\n                            className={group === groupNames.current ? \"selectedGroup\" : \"groupName\"}\r\n                            onClick={() => handleGroup(group, \"change\")}\r\n                        >\r\n                            {group}\r\n                            <RemoveButton onClick={() => handleGroup(group, \"remove\")}>X</RemoveButton>\r\n                        </p>\r\n                    </div>\r\n                ))}\r\n                <AddGroupInput />\r\n            </MenuContainer>\r\n        </Relativer>\r\n    );\r\n};\r\n\r\nexport default GroupSelectorMenu;","D:\\Desktop\\Projects\\nodejs\\todo\\src\\GroupSelectorMenu\\GroupSelectorMenu.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\GroupNamesContext.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\AddGroupInput\\AddGroupInput.js",["119","120"],"import React from 'react';\r\nimport { GroupNamesContext } from '../Contexts/GroupNamesContext';\r\nimport { NotificationsContext } from '../Contexts/NotificationsContext';\r\n\r\nimport {\r\n    InputContainer,\r\n    NameInput,\r\n    NewGroupButton\r\n} from './AddGroupInput.style';\r\n\r\nconst AddGroupInput = () => {\r\n    const [groupNames, setGroupNames] = React.useContext(GroupNamesContext);\r\n    const [{}, {}, addNotification] = React.useContext(NotificationsContext);\r\n    const inputRef = React.useRef();\r\n\r\n    const addGroup = () => {\r\n        if (inputRef.current.value === \"\" || groupNames.list.includes(inputRef.current.value))\r\n            return;\r\n        \r\n        const value = inputRef.current.value;\r\n        addNotification(\"valid\", `Group '${value}' has been added.`);\r\n        setGroupNames(prev => {\r\n            const newList = [...prev.list, value];\r\n            const newCurrent = (prev.list.length ? prev.current : value);\r\n            inputRef.current.value = \"\"; \r\n\r\n            return {\r\n                current: newCurrent,\r\n                list: newList\r\n            }\r\n        });\r\n    }\r\n\r\n    const onKeyDown = (e) => {\r\n        if (e.key === \"Enter\")\r\n            addGroup();\r\n    }\r\n\r\n    return (\r\n        <InputContainer>\r\n            <NameInput ref={inputRef} placeholder=\"New group...\" onKeyDown={onKeyDown} />\r\n            <NewGroupButton onClick={addGroup}>New</NewGroupButton>\r\n        </InputContainer>\r\n    );\r\n}\r\n\r\nexport default AddGroupInput;","D:\\Desktop\\Projects\\nodejs\\todo\\src\\AddGroupInput\\AddGroupInput.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\NotificationsContext.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Notifications\\Notifications.js",["121"],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Notifications\\Notifications.style.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":16,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"130","line":12,"column":5,"nodeType":"128","messageId":"129","endLine":12,"endColumn":14},{"ruleId":"126","severity":1,"message":"131","line":18,"column":10,"nodeType":"128","messageId":"129","endLine":18,"endColumn":23},{"ruleId":"126","severity":1,"message":"132","line":21,"column":12,"nodeType":"128","messageId":"129","endLine":21,"endColumn":20},{"ruleId":"126","severity":1,"message":"133","line":22,"column":24,"nodeType":"128","messageId":"129","endLine":22,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":23,"column":12,"nodeType":"136","messageId":"137","endLine":23,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":23,"column":16,"nodeType":"136","messageId":"137","endLine":23,"endColumn":18},{"ruleId":"126","severity":1,"message":"138","line":12,"column":22,"nodeType":"128","messageId":"129","endLine":12,"endColumn":33},{"ruleId":"126","severity":1,"message":"133","line":13,"column":24,"nodeType":"128","messageId":"129","endLine":13,"endColumn":37},{"ruleId":"126","severity":1,"message":"139","line":12,"column":5,"nodeType":"128","messageId":"129","endLine":12,"endColumn":13},{"ruleId":"126","severity":1,"message":"140","line":17,"column":12,"nodeType":"128","messageId":"129","endLine":17,"endColumn":25},{"ruleId":"126","severity":1,"message":"141","line":17,"column":27,"nodeType":"128","messageId":"129","endLine":17,"endColumn":42},{"ruleId":"126","severity":1,"message":"142","line":6,"column":5,"nodeType":"128","messageId":"129","endLine":6,"endColumn":14},{"ruleId":"126","severity":1,"message":"143","line":7,"column":5,"nodeType":"128","messageId":"129","endLine":7,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":27},{"ruleId":"134","severity":1,"message":"135","line":15,"column":12,"nodeType":"136","messageId":"137","endLine":15,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":15,"column":16,"nodeType":"136","messageId":"137","endLine":15,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":13,"column":12,"nodeType":"136","messageId":"137","endLine":13,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":13,"column":16,"nodeType":"136","messageId":"137","endLine":13,"endColumn":18},{"ruleId":"126","severity":1,"message":"144","line":10,"column":27,"nodeType":"128","messageId":"129","endLine":10,"endColumn":43},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Relativer' is defined but never used.","'CSSTransition' is defined but never used.","'todoList' is assigned a value but never used.","'setGroupNames' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setTodoList' is assigned a value but never used.","'CardDate' is defined but never used.","'notifications' is assigned a value but never used.","'setNotification' is assigned a value but never used.","'Separator' is defined but never used.","'ExpandArrow' is defined but never used.","'setNotifications' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]