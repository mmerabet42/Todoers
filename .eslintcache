[{"D:\\Desktop\\Projects\\nodejs\\todo\\src\\index.js":"1","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\TodoContext.js":"2","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Utils\\getDate.js":"3","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\GroupNamesContext.js":"4","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\NotificationsContext.js":"5","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Utils\\StyledComponents.js":"6","D:\\Desktop\\Projects\\nodejs\\todo\\src\\DefaultValues\\Default.js":"7","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\App\\App.js":"8","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\App\\App.style.js":"9","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Topbar\\Topbar.js":"10","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoInput\\TodoInput.js":"11","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Notifications\\Notifications.js":"12","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoList\\TodoList.js":"13","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Topbar\\Topbar.style.js":"14","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoInput\\TodoInput.style.js":"15","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Notifications\\Notifications.style.js":"16","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Game\\Game.js":"17","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\ShadowMask\\ShadowMask.js":"18","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoList\\TodoList.style.js":"19","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupSelectorMenu\\GroupSelectorMenu.js":"20","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoGroup\\TodoGroup.js":"21","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Game\\Game.style.js":"22","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\ShadowMask\\ShadowMask.style.js":"23","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupSelectorMenu\\GroupSelectorMenu.style.js":"24","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoGroup\\TodoGroup.style.js":"25","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoCard\\TodoCard.js":"26","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\GroupMenu.js":"27","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoCard\\TodoCard.style.js":"28","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\GroupMenu.style.js":"29","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoMenu\\TodoMenu.js":"30","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\ConnectedTodos\\ConnectedTodos.js":"31","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoMenu\\TodoMenu.style.js":"32","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\ConnectedTodos\\ConnectedTodos.style.js":"33","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\AddGroupInput\\AddGroupInput.js":"34","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\AddGroupInput\\AddGroupInput.style.js":"35","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\ProjectContext.js":"36","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\ProjectsList\\ProjectList.js":"37","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\ProjectsList\\ProjectList.style.js":"38"},{"size":212,"mtime":1607727189438,"results":"39","hashOfConfig":"40"},{"size":449,"mtime":1607726893302,"results":"41","hashOfConfig":"40"},{"size":361,"mtime":1607216679372,"results":"42","hashOfConfig":"40"},{"size":2367,"mtime":1608510312151,"results":"43","hashOfConfig":"40"},{"size":1267,"mtime":1607567042952,"results":"44","hashOfConfig":"40"},{"size":173,"mtime":1607380309199,"results":"45","hashOfConfig":"46"},{"size":872,"mtime":1608595592607,"results":"47","hashOfConfig":"40"},{"size":1297,"mtime":1608503154880,"results":"48","hashOfConfig":"40"},{"size":385,"mtime":1607876862455,"results":"49","hashOfConfig":"40"},{"size":441,"mtime":1607878847470,"results":"50","hashOfConfig":"40"},{"size":2755,"mtime":1608257768530,"results":"51","hashOfConfig":"40"},{"size":838,"mtime":1607726893302,"results":"52","hashOfConfig":"40"},{"size":1645,"mtime":1609360006740,"results":"53","hashOfConfig":"40"},{"size":316,"mtime":1607878847106,"results":"54","hashOfConfig":"40"},{"size":2011,"mtime":1607383920006,"results":"55","hashOfConfig":"40"},{"size":930,"mtime":1609290505514,"results":"56","hashOfConfig":"40"},{"size":938,"mtime":1607533980059,"results":"57","hashOfConfig":"40"},{"size":437,"mtime":1609286189161,"results":"58","hashOfConfig":"40"},{"size":1743,"mtime":1608493216255,"results":"59","hashOfConfig":"40"},{"size":4009,"mtime":1608249595262,"results":"60","hashOfConfig":"40"},{"size":1773,"mtime":1608510545464,"results":"61","hashOfConfig":"40"},{"size":330,"mtime":1607542885748,"results":"62","hashOfConfig":"40"},{"size":565,"mtime":1609286164407,"results":"63","hashOfConfig":"40"},{"size":3158,"mtime":1607652299975,"results":"64","hashOfConfig":"40"},{"size":1263,"mtime":1608259174394,"results":"65","hashOfConfig":"40"},{"size":2329,"mtime":1608239210127,"results":"66","hashOfConfig":"40"},{"size":4435,"mtime":1608243897207,"results":"67","hashOfConfig":"40"},{"size":2424,"mtime":1608500988038,"results":"68","hashOfConfig":"40"},{"size":4051,"mtime":1607652364336,"results":"69","hashOfConfig":"40"},{"size":4636,"mtime":1608241412442,"results":"70","hashOfConfig":"40"},{"size":2897,"mtime":1607727217826,"results":"71","hashOfConfig":"40"},{"size":4051,"mtime":1607876808839,"results":"72","hashOfConfig":"40"},{"size":2729,"mtime":1607652759276,"results":"73","hashOfConfig":"40"},{"size":2299,"mtime":1608503564785,"results":"74","hashOfConfig":"40"},{"size":973,"mtime":1607382590979,"results":"75","hashOfConfig":"40"},{"size":892,"mtime":1609292004584,"results":"76","hashOfConfig":"40"},{"size":7314,"mtime":1609364847264,"results":"77","hashOfConfig":"40"},{"size":5554,"mtime":1609362872509,"results":"78","hashOfConfig":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"13x1frq",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5ol0iy",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"81"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"81"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"D:\\Desktop\\Projects\\nodejs\\todo\\src\\index.js",[],["161","162"],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\TodoContext.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Utils\\getDate.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\GroupNamesContext.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\NotificationsContext.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Utils\\StyledComponents.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\DefaultValues\\Default.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\App\\App.js",["163"],"import React from 'react';\n\nimport Topbar from '../Topbar/Topbar';\nimport TodoInput from '../TodoInput/TodoInput';\nimport TodoList from '../TodoList/TodoList';\nimport ProjectList from '../ProjectsList/ProjectList';\n\nimport { ProjectContext, ProjectProvider } from '../../Contexts/ProjectContext';\nimport { TodosProvider } from '../../Contexts/TodoContext';\nimport { GroupNamesContext, GroupNamesProvider } from '../../Contexts/GroupNamesContext';\nimport { NotificationsProvider } from '../../Contexts/NotificationsContext';\n\nimport {\n  BodyContainer,\n  TodoBody\n} from './App.style';\nimport Notifications from '../Notifications/Notifications';\n\n\nconst App = () => {\n  return (\n    <NotificationsProvider>\n      <BodyContainer>\n        <Topbar />\n        <ProjectProvider>\n          <TodosProvider>\n            <GroupNamesProvider>\n              <InnerApp />\n            </GroupNamesProvider>\n          </TodosProvider>\n        </ProjectProvider>\n        <Notifications />\n      </BodyContainer>\n    </NotificationsProvider>\n  );\n}\n\nconst InnerApp = () => {\n  const { projects } = React.useContext(ProjectContext);\n\n  if (projects.current)\n    return (\n      <TodoBody>\n        <TodoInput />\n        <TodoList />\n      </TodoBody>\n    );\n\n  return (\n    <ProjectList />\n  );\n}\n\nexport default App;\n","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\App\\App.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Topbar\\Topbar.js",["164"],"import React from 'react';\r\nimport { TitleContainer, TodoTitle } from './Topbar.style';\r\n\r\nimport Game from '../Game/Game';\r\n\r\nconst Topbar = () => {\r\n    const [showGame, setShowGame] = React.useState(false);\r\n\r\n    return (\r\n        <TitleContainer>\r\n            <TodoTitle onClick={() => setShowGame(!showGame)}>TODO</TodoTitle>\r\n            {/* { showGame && <Game /> } */}\r\n        </TitleContainer>\r\n    );\r\n}\r\n\r\nexport default Topbar;","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoInput\\TodoInput.js",["165","166"],"import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { getDate } from '../../Utils/getDate';\r\n\r\nimport { TodosContext } from '../../Contexts/TodoContext';\r\nimport { GroupNamesContext } from '../../Contexts/GroupNamesContext';\r\nimport { NotificationsContext } from '../../Contexts/NotificationsContext';\r\n\r\nimport { \r\n    InputContainer,\r\n    StyledInput,\r\n    StyledButton,\r\n    ChangeGroupButton\r\n} from './TodoInput.style';\r\nimport ShadowMask from '../ShadowMask/ShadowMask';\r\n\r\nimport GroupSelectorMenu from '../GroupSelectorMenu/GroupSelectorMenu';\r\nimport { CSSTransition } from 'react-css-transition';\r\nimport { ProjectContext } from '../../Contexts/ProjectContext';\r\n\r\nconst TodoInput = () => {\r\n    const { setTodoList } = React.useContext(TodosContext);\r\n    const { projects, getProjectById } = React.useContext(ProjectContext);\r\n    const { groupNames, getGroupById } = React.useContext(GroupNamesContext);\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n\r\n    const [ open, setOpen ] = React.useState(false);\r\n\r\n    const inputNameRef = React.useRef();\r\n\r\n    const onKeyDown = (e) => {\r\n        if (e.key === 'Enter')\r\n            addTodo();\r\n    }\r\n\r\n    const addTodo = () => {\r\n        const formatted = inputNameRef.current.value.trim();\r\n        const project = getProjectById(projects.current);\r\n        inputNameRef.current.value = \"\";\r\n\r\n        if (formatted === \"\") {\r\n            addNotification(\"error\", \"Todo name cannot be empty.\");\r\n            return;\r\n        }\r\n        else if (project.current === null) {\r\n            addNotification(\"error\", \"You must select a default group before adding todos.\");\r\n            return;\r\n        }\r\n        \r\n        const newTodo = {\r\n            group: project.current,\r\n            connectedGroup: null,\r\n            id: uuidv4(),\r\n            details: formatted,\r\n            done: false,\r\n            creationDate: getDate()\r\n        };\r\n        \r\n        setTodoList(prev => [newTodo, ...prev]);\r\n        addNotification(\"valid\", `Todo '${formatted}' has been added to group '${getGroupById(project.current).name}'.`);\r\n    }\r\n\r\n    return (\r\n        <InputContainer>\r\n            <StyledInput className=\"todo-input\" placeholder=\"New Todo...\" ref={inputNameRef} onKeyDown={onKeyDown} />\r\n            <StyledButton onClick={addTodo}>\r\n                New\r\n            </StyledButton>\r\n            <ChangeGroupButton onClick={() => setOpen(!open)}>\r\n                ▼\r\n            </ChangeGroupButton>\r\n            {open && <ShadowMask onClick={() => setOpen(false)}>\r\n                <GroupSelectorMenu setOpen={setOpen} />\r\n            </ShadowMask>}\r\n        </InputContainer> \r\n    );\r\n};\r\n\r\nexport default TodoInput;\r\n\r\n// FEEFE5\r\n","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Notifications\\Notifications.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoList\\TodoList.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Topbar\\Topbar.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoInput\\TodoInput.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Notifications\\Notifications.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Game\\Game.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\ShadowMask\\ShadowMask.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoList\\TodoList.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupSelectorMenu\\GroupSelectorMenu.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoGroup\\TodoGroup.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\Game\\Game.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\ShadowMask\\ShadowMask.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupSelectorMenu\\GroupSelectorMenu.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoGroup\\TodoGroup.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoCard\\TodoCard.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\GroupMenu.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoCard\\TodoCard.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\GroupMenu.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoMenu\\TodoMenu.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\ConnectedTodos\\ConnectedTodos.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\TodoMenu\\TodoMenu.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\GroupMenu\\ConnectedTodos\\ConnectedTodos.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\AddGroupInput\\AddGroupInput.js",["167"],"import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { GroupNamesContext } from '../../Contexts/GroupNamesContext';\r\nimport { NotificationsContext } from '../../Contexts/NotificationsContext';\r\nimport { ProjectContext } from '../../Contexts/ProjectContext';\r\n\r\nimport {\r\n    InputContainer,\r\n    NameInput,\r\n    NewGroupButton\r\n} from './AddGroupInput.style';\r\n\r\nconst AddGroupInput = () => {\r\n    const { projects, setProjects } = React.useContext(ProjectContext);\r\n    const { groupNames, setGroupNames } = React.useContext(GroupNamesContext);\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n    const inputRef = React.useRef();\r\n\r\n    const addGroup = () => {\r\n        const formatted = inputRef.current.value.trim();\r\n\r\n        if (formatted === \"\")\r\n            return addNotification(\"error\", \"Group name cannot be empty.\");\r\n        else if (groupNames.find(value => value.name === formatted && value.projectId == projects.current))\r\n            return addNotification(\"error\", `Group '${formatted}' already exists.`);\r\n\r\n        const value = {\r\n            name: formatted,\r\n            id: uuidv4(),\r\n            projectId: projects.current,\r\n            showTodos: true\r\n        };\r\n\r\n        if (groupNames.filter(valueElement => valueElement.projectId === projects.current).length === 0) {\r\n            setProjects(prev => {\r\n                const copyProjects = [...projects.list];\r\n                const project = copyProjects.find(valueElement => valueElement.id === projects.current);\r\n\r\n                project.current = value.id;\r\n                return {\r\n                    current: projects.current,\r\n                    list: copyProjects\r\n                };\r\n            })\r\n        }\r\n\r\n        inputRef.current.value = \"\";\r\n        setGroupNames(prev => [...prev, value]);\r\n        addNotification(\"valid\", `Group '${value.name}' has been added.`);\r\n    }\r\n\r\n    const onKeyDown = (e) => {\r\n        if (e.key === \"Enter\")\r\n            addGroup();\r\n    }\r\n\r\n    return (\r\n        <InputContainer>\r\n            <NameInput ref={inputRef} placeholder=\"New group...\" onKeyDown={onKeyDown} />\r\n            <NewGroupButton onClick={addGroup}>New</NewGroupButton>\r\n        </InputContainer>\r\n    );\r\n}\r\n\r\nexport default AddGroupInput;","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\AddGroupInput\\AddGroupInput.style.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Contexts\\ProjectContext.js",[],"D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\ProjectsList\\ProjectList.js",["168"],"import React from 'react';\r\n\r\nimport { RiDeleteBin2Line } from 'react-icons/ri';\r\nimport { FiSettings } from 'react-icons/fi';\r\nimport { FiChevronLeft } from \"react-icons/fi\";\r\n\r\nimport ShadowMask from '../ShadowMask/ShadowMask';\r\n\r\nimport { ProjectContext } from '../../Contexts/ProjectContext';\r\n\r\nimport {\r\n    Center,\r\n    ProjectsContainer,\r\n    Project,\r\n    CenterMenu,\r\n    NewProjectContainer\r\n} from './ProjectList.style';\r\nimport { NotificationsContext } from '../../Contexts/NotificationsContext';\r\nimport { getDate } from '../../Utils/getDate';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst ProjectList = () => {\r\n    const [ openMenu1, setOpenMenu1 ] = React.useState(null);\r\n    const [ openMenu, setOpenMenu ] = React.useState(false);\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n    const { projects, setProjects, deleteProjectById } = React.useContext(ProjectContext);\r\n\r\n    const openProject = (projectId) => {\r\n        setProjects(prev => ({\r\n            current: projectId,\r\n            list: prev.list\r\n        }));\r\n    }\r\n\r\n    const deleteProject = (project) => {\r\n        deleteProjectById(project.id);\r\n        addNotification(\"valid\", `Project '${project.name}' has been deleted successfully.`)\r\n    }\r\n\r\n    return (\r\n        <Center>\r\n            <ProjectsContainer>\r\n                {projects.list.map(project => (\r\n                    <Project key={project.id}>\r\n                        <div className=\"select-rect\" onClick={() => setOpenMenu1(project)}>\r\n                            <FiSettings className=\"icon\" />\r\n                        </div>\r\n                        <div className=\"title-container\" onClick={() => openProject(project.id)}>\r\n                            <p className=\"project-name\">{project.name}</p>\r\n                            <p className=\"creation-date\">{project.creationDate}</p>\r\n                        </div>\r\n                        <div className=\"delete-rect\" onClick={() => deleteProject(project)}>\r\n                            <RiDeleteBin2Line className=\"icon\" />\r\n                        </div>\r\n                    </Project>\r\n                ))}\r\n            </ProjectsContainer>    \r\n            <div className=\"add-project\" onClick={() => setOpenMenu(!openMenu)}>\r\n                New Project\r\n            </div>\r\n            { openMenu && <NewProjectMenu setOpenMenu={setOpenMenu} /> }\r\n            { openMenu1 && <SettingsMenu setOpenMenu={setOpenMenu1} project={openMenu1} /> }\r\n        </Center>\r\n    )\r\n}\r\n\r\nconst NewProjectMenu = ({setOpenMenu}) => {\r\n    const { projects, setProjects } = React.useContext(ProjectContext)\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n\r\n    const nameRef = React.useRef();\r\n    const descriptionRef = React.useRef();\r\n\r\n    const addProject = () => {\r\n        if (nameRef.current.value === \"\")\r\n            return addNotification(\"error\", \"Project name cannot be empty.\");\r\n        else if (projects.list.find(value => value.name === nameRef.current.value))\r\n            return addNotification(\"error\", \"Project name already exists.\");\r\n\r\n        setProjects(prev => ({\r\n            current: prev.current,\r\n            list: [...prev.list, {\r\n                name: nameRef.current.value,\r\n                description: descriptionRef.current.value,\r\n                creationDate: getDate(),\r\n                id: uuidv4(),\r\n                current: null\r\n            }]\r\n        }));\r\n        setOpenMenu(false);\r\n    }\r\n\r\n    return (\r\n        <ShadowMask onClick={() => setOpenMenu(false)} color={\"#D5D5D555\"}>\r\n            <NewProjectContainer>\r\n                <div className=\"menu-container\">\r\n                    <div className=\"header\" onClick={() => setOpenMenu(false)}>\r\n                        <FiChevronLeft />\r\n                        <p>Create a new project</p>\r\n                    </div>\r\n                    <div className=\"body\">\r\n                        <div className=\"input\">\r\n                            <p>Name</p>\r\n                            <input ref={nameRef} className=\"field\" />\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            <p>Description</p>\r\n                            <textarea ref={descriptionRef} className=\"field\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <button onClick={addProject} className=\"add-button\">Create project</button>\r\n                    </div>\r\n                </div>\r\n            </NewProjectContainer>\r\n        </ShadowMask>\r\n    );\r\n}\r\n\r\n\r\nconst SettingsMenu = ({setOpenMenu, project}) => {\r\n    const { projects, setProjects, deleteProjectById } = React.useContext(ProjectContext)\r\n    const { addNotification } = React.useContext(NotificationsContext);\r\n\r\n    const nameRef = React.useRef();\r\n    const descriptionRef = React.useRef();\r\n\r\n    const saveChanges = () => {\r\n        if (nameRef.current.value === \"\")\r\n            return addNotification(\"error\", \"Project name cannot be empty.\");\r\n        else if (projects.list.find(value => value.id !== project.id && value.name === nameRef.current.value))\r\n            return addNotification(\"error\", \"Project name already exists.\");\r\n\r\n        setProjects(prev => {\r\n            const newList = [...prev.list];\r\n            const proj = newList.find(value => value.id === project.id);\r\n\r\n            proj.name = nameRef.current.value;\r\n            proj.description = descriptionRef.current.value;\r\n            return {\r\n                current: prev.current,\r\n                list: newList\r\n            };\r\n        });\r\n        addNotification(\"valid\", `Changes made to '${nameRef.current.value}' has been saved.`);\r\n        setOpenMenu(null);\r\n    }\r\n\r\n    const deleteProject = () => {\r\n        deleteProjectById(project.id);\r\n        setOpenMenu(null);\r\n        addNotification(\"valid\", `Project '${project.name}' has been deleted successfully.`)\r\n    }\r\n\r\n    return (\r\n        <ShadowMask onClick={() => setOpenMenu(null)} color={\"#D5D5D555\"}>\r\n            <NewProjectContainer>\r\n                <div className=\"menu-container\">\r\n                    <div className=\"header\" onClick={() => setOpenMenu(null)}>\r\n                        <FiChevronLeft />\r\n                        <p>Project settings</p>\r\n                    </div>\r\n                    <div className=\"body\">\r\n                        <div className=\"input\">\r\n                            <p>Name</p>\r\n                            <input ref={nameRef} className=\"field\" defaultValue={project.name} />\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            <p>Description</p>\r\n                            <textarea ref={descriptionRef} className=\"field\" defaultValue={project.description} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <button onClick={deleteProject} className=\"delete-button\">Delete project</button>\r\n                        <button onClick={saveChanges} className=\"add-button\">Save changes</button>\r\n                    </div>\r\n                </div>\r\n            </NewProjectContainer>\r\n        </ShadowMask>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","D:\\Desktop\\Projects\\nodejs\\todo\\src\\Components\\ProjectsList\\ProjectList.style.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":10,"column":10,"nodeType":"175","messageId":"176","endLine":10,"endColumn":27},{"ruleId":"173","severity":1,"message":"177","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":12},{"ruleId":"173","severity":1,"message":"178","line":18,"column":10,"nodeType":"175","messageId":"176","endLine":18,"endColumn":23},{"ruleId":"173","severity":1,"message":"179","line":24,"column":13,"nodeType":"175","messageId":"176","endLine":24,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":24,"column":87,"nodeType":"182","messageId":"183","endLine":24,"endColumn":89},{"ruleId":"173","severity":1,"message":"184","line":15,"column":5,"nodeType":"175","messageId":"176","endLine":15,"endColumn":15},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'GroupNamesContext' is defined but never used.","Identifier","unusedVar","'Game' is defined but never used.","'CSSTransition' is defined but never used.","'groupNames' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CenterMenu' is defined but never used.","no-global-assign","no-unsafe-negation"]